#include<iostream>  ////////DONEEEEEEEEEEEEEEE
#include<iomanip>
#include<ctime>
#include<string>
#define discount 0.20
#define charge 0.06
#define tax 0.06
using namespace std;
// use for menu
char menuchoice;
// use for report
int day, month, year;
// use for order
char accessory, itembuy, addon_order;
double priceitem = 0;
string itemname;
int qty = 0, A_qty = 0, AA_qty = 0;
int custnum = 0, ordernum = 0;
// use for addon order
char A_accessory, A_itembuy;
double A_priceitem = 0;
string A_itemname;
// use for invoice
double total = 0, discountrate = 0, afterdiscount = 0, chargerate = 0, taxrate, final = 0;
double A_total = 0, A_discountrate = 0, A_afterdiscount = 0, A_chargerate = 0, A_taxrate, A_final = 0;
double AA_total = 0, AA_discountrate = 0, AA_afterdiscount = 0, AA_chargerate = 0, AA_taxrate, AA_final = 0;
char payment;
string payment_method;
double amount, change = 0;
// use for int main
char next_cust;
// use for customer service
char cust_choice;
// use for warranty
string cust_name, warranty_product, warranty_reason;
int cust_phone, choice_reason;
int W_date, W_month, W_year;
char confirm_warranty;
int warranty_num = 0;
// use for refund
string cust_R_name, refund_product, refund_reason;
int cust_R_phone, choice_R_reason;
char confirm_refund;
double refundprice;
int refund_num = 0;

void menu();
void time();
void identity_price_name();
void identity_warranty_reason();
void identity_refund_reason();
void identity_warranty_date();
void compare_warranty_date();

void order_menu();
void addon_order_menu();

void invoice();
void receipt();

void customer_service();
void refund();
void warranty();
void receipt_warranty();
void receipt_refund();

void report();

void time()
{
	time_t now = time(0);
	tm ltm; 

	localtime_s(&ltm, &now);

	day = ltm.tm_mday;
	month = ltm.tm_mon + 1; 
	year = 1900 + ltm.tm_year;
}

void identity_price_name()  // identify item price and name 
{
	switch (accessory)
	{
	case 'A': case 'a':

		switch (itembuy)
		{
		case 'A': case'a':
			itemname = "XIAOMI Universal Travel Adapter";
			priceitem = 65.99;
			break;
		case 'B': case'b':
			itemname = "XIAOMI Plug Travel Adapter";
			priceitem = 25.99;
			break;
		case 'C': case'c':
			itemname = "XIAOMI High Capacity Powerbank";
			priceitem = 150.99;
			break;
		case 'D': case'd':
			itemname = "XIAOMI Portable Powerbank";
			priceitem = 70.99;
			break;
		case 'E': case'e':
			itemname = "XIAOMI Fast Charge USB-C Cable";
			priceitem = 50.99;
			break;
		case 'F': case'f':
			itemname = "XIAOMI Normal USB-C Cable";
			priceitem = 25.99;
			break;
		case 'G': case'g':
			itemname = "XIAOMI Fast Charge Lightning Cable";
			priceitem = 60.99;
			break;
		case 'H': case'h':
			itemname = "XIAOMI Normal Lightning Cable";
			priceitem = 30.99;
			break;
		case 'I': case'i':
			itemname = "XIAOMI TWS (True Wireless Stereo) Bluetooth Earbuds";
			priceitem = 30.99;
			break;
		case 'J': case'j':
			itemname = "XIAOMI Neckband Bluetooth Earphone";
			priceitem = 50.99;
			break;
		case 'K': case'k':
			itemname = "XIAOMI Over-Ear Headphones";
			priceitem = 80.99;
			break;
		case 'L': case'l':
			itemname = "XIAOMI In-Ear Headphones";
			priceitem = 30.99;
			break;
		}
		break;
	case 'B':case'b':
		switch (itembuy)
		{
		case 'A': case'a':
			itemname = "Dell 65W Laptop Charger RM 189.99";
			priceitem = 189.99;
			break;
		case 'B': case'b':
			itemname = "Hp 65W Laptop Charger RM 189.99";
			priceitem = 159.99;
			break;
		case 'C': case'c':
			itemname = "Ugreen 4-Port USB Hub";
			priceitem = 70.99;
			break;
		case 'D': case'd':
			itemname = "Anker 7-Port USB Hub";
			priceitem = 140.99;
			break;
		case 'E': case'e':
			itemname = "SanDisk USB Flash Drive 16GB";
			priceitem = 25.99;
			break;
		case 'F': case'f':
			itemname = "Kingston USB Flash Drive 64GB";
			priceitem = 30.99;
			break;
		case 'G': case'g':
			itemname = "WD 1TB External Hard Drive";
			priceitem = 250.99;
			break;
		case 'H': case'h':
			itemname = "Seagate 512GB External Hard Drive";
			priceitem = 180.99;
			break;
		case 'I': case'i':
			itemname = "XIAOMI Wireless Mouse";
			priceitem = 20.99;
			break;
		case 'J': case'j':
			itemname = "XIAOMI Wired Mouse";
			priceitem = 30.99;
			break;
		case 'K': case'k':
			itemname = "XIAOMI Headset With Microphone";
			priceitem = 100.99;
			break;
		case 'L': case'l':
			itemname = "XIAOMI Speaker With Microphone";
			priceitem = 150.99;
			break;
		}
	}
}

void identity_addon_price_name()  // identify item price and name ADDONNNNNNNNNNN ONLY ONCE:(
{
	switch (A_accessory)
	{
	case 'A': case 'a':

		switch (A_itembuy)
		{
		case 'A': case'a':
			A_itemname = "XIOAMI Universal Travel Adapter";
			A_priceitem = 65.99;
			break;
		case 'B': case'b':
			A_itemname = "XIAOMI Plug Travel Adapter";
			A_priceitem = 25.99;
			break;
		case 'C': case'c':
			A_itemname = "XIAOMI High Capacity Powerbank";
			A_priceitem = 150.99;
			break;
		case 'D': case'd':
			A_itemname = "XIAOMI Portable Powerbank";
			A_priceitem = 70.99;
			break;
		case 'E': case'e':
			A_itemname = "XIAOMI Fast Charge USB-C Cable";
			A_priceitem = 50.99;
			break;
		case 'F': case'f':
			A_itemname = "XIAOMI Normal USB-C Cable";
			A_priceitem = 25.99;
			break;
		case 'G': case'g':
			A_itemname = "XIAOMI Fast Charge Lightning Cable";
			A_priceitem = 60.99;
			break;
		case 'H': case'h':
			A_itemname = "XIAOMI Normal Lightning Cable";
			A_priceitem = 30.99;
			break;
		case 'I': case'i':
			A_itemname = "XIAOMI TWS (True Wireless Stereo) Bluetooth Earbuds";
			A_priceitem = 30.99;
			break;
		case 'J': case'j':
			A_itemname = "XIAOMI Neckband Bluetooth Earphone";
			A_priceitem = 50.99;
			break;
		case 'K': case'k':
			A_itemname = "XIAOMI Over-Ear Headphones";
			A_priceitem = 80.99;
			break;
		case 'L': case'l':
			A_itemname = "XIAOMI In-Ear Headphones";
			A_priceitem = 30.99;
			break;
		}
		break;
	case 'B':case'b':
		switch (A_itembuy)
		{
		case 'A': case'a':
			A_itemname = "Dell 65W Laptop Charger RM 189.99";
			A_priceitem = 189.99;
			break;
		case 'B': case'b':
			A_itemname = "Hp 65W Laptop Charger RM 189.99";
			A_priceitem = 159.99;
			break;
		case 'C': case'c':
			A_itemname = "Ugreen 4-Port USB Hub";
			A_priceitem = 70.99;
			break;
		case 'D': case'd':
			A_itemname = "Anker 7-Port USB Hub";
			A_priceitem = 140.99;
			break;
		case 'E': case'e':
			A_itemname = "SanDisk USB Flash Drive 16GB";
			A_priceitem = 25.99;
			break;
		case 'F': case'f':
			A_itemname = "Kingston USB Flash Drive 64GB";
			A_priceitem = 30.99;
			break;
		case 'G': case'g':
			A_itemname = "WD 1TB External Hard Drive";
			A_priceitem = 250.99;
			break;
		case 'H': case'h':
			A_itemname = "Seagate 512GB External Hard Drive";
			A_priceitem = 180.99;
			break;
		case 'I': case'i':
			A_itemname = "XIAOMI Wireless Mouse";
			A_priceitem = 20.99;
			break;
		case 'J': case'j':
			A_itemname = "XIAOMI Wired Mouse";
			A_priceitem = 30.99;
			break;
		case 'K': case'k':
			A_itemname = "XIAOMI Headset With Microphone";
			A_priceitem = 100.99;
			break;
		case 'L': case'l':
			A_itemname = "XIAOMI Speaker With Microphone";
			A_priceitem = 150.99;
			break;
		}
	}
}

void identity_payment() // identity payment
{
	switch (payment)
	{
	case 'A': case 'a':
		payment_method = "E - Wallet";
		break;
	case 'B': case 'b':
		payment_method = "Credit Card";
		break;
	case 'C': case 'c':
		payment_method = "Debit Card";
		break;
	case 'D': case 'd':
		payment_method = "Cash";
		break;
	}
}

void identity_warranty_reason()  // identity warranty reason
{
	switch (choice_reason)
	{
	case 1:
		warranty_reason = "Manufacturing defect.";
		break;
	case 2:
		warranty_reason = "Hardware failure.";
		break;
	case 3:
		warranty_reason = "Software issue.";
		break;
	case 4:
		warranty_reason = "Improper usage.";
		break;
	case 5:
		warranty_reason = "Normal wear and tear.";
		break;
	case 6:
		warranty_reason = "External factor.";
		break;
	case 7:
		cin.ignore();
		cout << "Please describe your reason :";
		getline(cin, warranty_reason);
		break;
	}
}

void identity_warranty_date()
{
	while (W_month < 1 || W_month >12)
	{
		cout << "Invalid month..." << endl;
		cout << "Please enter again :";
		cin >> W_month;
	}
	switch (W_month)
	{
	case 1: case 3: case 5: case 7: case 8: case 10: case 12:
		while (W_date < 1 || W_date >31)
		{
			cout << "Invalid date..." << endl;
			cout << "Please enter again :";
			cin >> W_date;
		}
		break;
	case 4: case 6: case 9: case 11:
		while (W_date < 1 || W_date >30)
		{
			cout << "Invalid date..." << endl;
			cout << "Please enter again :";
			cin >> W_date;
		}
		break;
	case 2:
		if ((W_year % 4 == 0 && W_year % 100 != 0) || W_year % 400 == 0)
		{
			while (W_date < 1 || W_date >29)
			{
				cout << "Invalid date..." << endl;
				cout << "Please enter again :";
				cin >> W_date;
			}
		}

		else
		{
			while (W_date < 1 || W_date >28)
			{
				cout << "Invalid date..." << endl;
				cout << "Please enter again :";
				cin >> W_date;
			}
		}

	}
}

void compare_warranty_date()  // compare warranty date  valid / invalid warranty?
{
	time();
	identity_warranty_date();
	if (W_year < year ||
		(W_year == year && W_month < month) ||
		(W_year == year && W_month == month && W_date < day))
	{
		cout << endl;
		cout << "Warranty has expired..." << endl;
		cout << "Back to main page..." << endl;
		cout << endl;
		menu();
	}
}

void identity_refund_reason()  // identity refund reason
{
	switch (choice_reason)
	{
	case 1:
		refund_reason = "Product is not working.";
		break;
	case 2:
		refund_reason = "Received the wrong model or color.";
		break;
	case 3:
		refund_reason = "Physical damage found upon opening.";
		break;
	case 4:
		refund_reason = "Battery issue.";
		break;
	case 5:
		refund_reason = "Item is not compatible with my device.";
		break;
	case 6:
		refund_reason = "Wrong quantity received.";
		break;
	case 7:
		cin.ignore();
		cout << "Please describe your reason :";
		getline(cin, refund_reason);
		break;
	}
}

void addon_order_menu()  // 2nd time order
{
	time();
	identity_addon_price_name();
	cout << endl;
	cout << "Welcome CSG Gadget Shop!!!" << endl;
	cout << endl;
	cout << "Please choose an accessory. (A-PHONE / B-COMPUTER) :";
	cin >> A_accessory;

	while (A_accessory != 'A' && A_accessory != 'a' && A_accessory != 'B' && A_accessory != 'b')
	{
		cout << "Invalid choice..." << endl;
		cout << "Please enter again..." << endl;
		cin >> A_accessory;
	}
	if (A_accessory == 'A' || A_accessory == 'a')
	{
		cout << "Adapter :" << endl;
		cout << "---------" << endl;
		cout << "A. XIAOMI Universal Travel Adapter RM 65.99" << endl;
		cout << "Pros: Device work on 100+ countires." << endl;
		cout << "      Multiple USB ports - caherge multiple device at once." << endl;
		cout << "Cons: Heavier than single plug adapter." << endl;
		cout << "      Higher price point." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "B. XIAOMI Plug Adapter  RM 25.99" << endl;
		cout << "Pros: Lightweight and fits easily in your pocket." << endl;
		cout << "      Get one for each destination with lower price." << endl;
		cout << "Cons: Works only in one plug type." << endl;
		cout << "      No USB ports - you have to seperate charge your device." << endl;
		cout << endl;
		cout << "Powerbank :" << endl;
		cout << "-----------" << endl;
		cout << "C. XIAOMI High Capacity Powerbank RM 150.99" << endl;
		cout << "Pros: Large capacity suitable for long trips." << endl;
		cout << "      Multiple devices charging at once." << endl;
		cout << "Cons: Large size and weight, less portable." << endl;
		cout << "      Longer charging time, takes more time to recharge." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "D. XIAOMI Portable Powerbank RM 70.99" << endl;
		cout << "Pros: Light and compact, easy to handleas and carry out." << endl;
		cout << "      Fast charging with quicker recharge times." << endl;
		cout << "Cons: Smaller capacity, provides limited cahrges." << endl;
		cout << "      Required frequent recharging when long trips." << endl;
		cout << endl;
		cout << "USB Cable :" << endl;
		cout << "-----------" << endl;
		cout << "E. XIAOMI Fast Charge USB-C Cable RM 50.99" << endl;
		cout << "Pros: Reversible plug, easy to use." << endl;
		cout << "      Fast date transfer and charging." << endl;
		cout << "Cons: Requires compatible devices to support fast charging." << endl;
		cout << "      Shorter lifespan if used with non-fast charging devices regularly." << endl;
	    cout << setw(100) << setfill('-') << "" << endl;
		cout << "F. XIAOMI Normal USB-C Cable RM 25.99" << endl;
		cout << "Pros: Durable, built to withstand daily wear and tear." << endl;
		cout << "      More affordable, offering great value for basic charging." << endl;
		cout << "Cons: Limited to standard cahrging." << endl;
		cout << "      May not support higher power output for power-hungry devices." << endl;
		cout << endl;
		cout << "Lightning Cable :" << endl;
		cout << "-----------------" << endl;
		cout << "G. XIAOMI Fast Charge Lightning Cable RM 60.99" << endl;
		cout << "Pros: Support fast charging with USB PD." << endl;
		cout << "      Efficient charging, can charge up 50% in about 30 minutes." << endl;
		cout << "Cons: May cause battery damage." << endl;
		cout << "      More expensive than normal Lightning cable." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "H. XIAOMI Normal Lightning Cable RM 30.99" << endl;
		cout << "Pros: Protect battery well, won't be damage to battery." << endl;
		cout << "      Affordable, offering great value for basic charging and syncing needs." << endl;
		cout << "Cons: Slower charging speed compared to fast charge cables." << endl;
		cout << "      Do not support fast charging for iPhone." << endl;
		cout << endl;
		cout << "Bluetooth Earbuds :" << endl;
		cout << "-------------------" << endl;
		cout << "I. XIAOMI TWS (True Wireless Stereo) Bluetooth Earbuds RM 30.99" << endl;
		cout << "Pros: Completely wireless, providing full freedom of movement." << endl;
		cout << "      Small and lightweight, easy handle and carry out." << endl;
		cout << "Cons: Due to small size, esaily misplaced." << endl;
		cout << "      Limited battery life, needs to be charged regularly." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "J. XIAOMI Neckband Bluetooth Earphone RM 50.99" << endl;
		cout << "Pros: Stable fit, suitable for sports and active use." << endl;
		cout << "      Better sound quality, Large battery and space provide clearer sound." << endl;
		cout << "Cons: Not fully wireless, neckband still connects with earbuds." << endl;
		cout << "      More heavier, user might feel cumbersome during extended use." << endl;
		cout << "Wired Earbuds :" << endl;
		cout << "---------------" << endl;
		cout << "K. XIAOMI Over-Ear Headphones RM 80.99" << endl;
		cout << "Pros: Better sound quality especially in terms of bass and immersive audio experience." << endl;
		cout << "      Excellent noise isolation, ideal for focused listening." << endl;
		cout << "Cons: Heavy and not suitable for active movements." << endl;
		cout << "      Hard to hear others, noise isolation make it difficult to hear other." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "L. XIAOMI In-Ear Headphones RM 30.99" << endl;
		cout << "Pros: Small size and easy carry around." << endl;
		cout << "      Perfect for exercise such as running and cycling." << endl;
		cout << "Cons: Sound quality is not as rich." << endl;
		cout << "      Less noise isolation ." << endl;
		cout << endl;
		cout << "Enter your choice :";
		cin >> A_itembuy;
		cout << "Quantity :";
		cin >> A_qty;
	}
	else if (A_accessory == 'B' || A_accessory == 'b')
	{
		cout << "Laptop Charger :" << endl;
		cout << "----------------" << endl;
		cout << "A. Dell 65W Laptop Charger RM 189.99" << endl;
		cout << "Pros: Reliable Brand, many users have high trust quality of DELL." << endl;
		cout << "      Stable charging, less risk of overheating and extend battery life." << endl;
		cout << "Cons: Higher price compared to third-party alternatives." << endl;
		cout << "      Not compatible with other brands." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "B. HP 65W Laptop Charger  RM 159.99" << endl;
		cout << "Pros: Higher compatibility with many HP laptop models." << endl;
		cout << "      Portable, lightweight and easy carry to somewhere." << endl;
		cout << "Cons: Slower charging speed while 65W is sufficient for most regular task." << endl;
		cout << "      Brand-Specific compatibility, charger is limited to HP laptops." << endl;
		cout << endl;
		cout << "USB Hub :" << endl;
		cout << "---------" << endl;
		cout << "C. Ugreen 4-Port USB Hub RM 70.99" << endl;
		cout << "Pros: High Speed transfer, offers data transfer speed up to 5Gbps." << endl;
		cout << "      No external power required, powered by computer's USB port only." << endl;
		cout << "Cons: Limited Ports, 4 ports may not sufficient for who need connect many devices" << endl;
		cout << "      Basic use, may have limitation if user need connect high-power devices." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "D. Anker 7-Port USB Hub RM 140.99" << endl;
		cout << "Pros: 7-Port design, perfect for connecting multiple devices at once." << endl;
		cout << "      External power support, can get external power to provide additional power ofr high-demand devices." << endl;
		cout << "Cons: Requires External Power, high-power devices will need an external power source." << endl;
		cout << "      7-port version is larger and takes up more space." << endl;
		cout << endl;
		cout << "USB Flash Drive :" << endl;
		cout << "-----------------" << endl;
		cout << "E. SanDisk USB Flash Drive 16GB RM 25.99" << endl;
		cout << "Pros: Affordable, with 16GB storage, this flash drive is budget-friendly." << endl;
		cout << "      Compact and portable, small size easy to carry aroung." << endl;
		cout << "Cons: Limited storage, only 16GB of storage may not enough for who need store large file." << endl;
		cout << "      Plastic build, the plastic casing may be more prone to damage from physical impacts." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "F. Kingston USB Flash Drive 64GB RM 30.99" << endl;
		cout << "Pros: Large storage capacity, can store and transfer larger file." << endl;
		cout << "      Durable design, robust moterials provide better protection from physical impact." << endl;
		cout << "Cons: More expensive, may not worth the value for who only need store small file." << endl;
		cout << "      Low speed especially for very large file transfer and store." << endl;
		cout << endl;
		cout << "External Hard Drive :" << endl;
		cout << "---------------------" << endl;
		cout << "G. WD 1TB External Hard Drive RM 250.99" << endl;
		cout << "Pros: Large storage capacity, perfect for who need storage for videos, photos and games." << endl;
		cout << "      Reliable brand, WD is know for producing durable and high quality product." << endl;
		cout << "Cons: Higher price, generally more expensive then 512GB hard drive." << endl;
		cout << "      Not compatibility with Mac, some models from MacBook may not compatible." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "H. Seagate 512GB External Hard Drive RM 180.99" << endl;
		cout << "Pros: More affordabl, more chepater and suitable for budget-conscious users." << endl;
		cout << "      Lower Power consumption, less power usage and good for ultrabooks and everyday use." << endl;
		cout << "Cons: Limited Storage Space, may not enough for large games and multimedia files." << endl;
		cout << "      May require addtional storage, might need external drive again for extra space." << endl;
		cout << endl;
		cout << "Mouse :" << endl;
		cout << "-------" << endl;
		cout << "I. XIAOAMI Wireless Mouse RM 20.99" << endl;
		cout << "Pros: Completely wireless, providing full freedom of movement." << endl;
		cout << "      Small and lightweight, easy handle and carry out." << endl;
		cout << "Cons: Battery dependency, requires battery replacement." << endl;
		cout << "      May experience lag or disconeects due to wireless interference." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "J. XIAOAMI Wired Mouse RM 30.99" << endl;
		cout << "Pros: Stable connection, no delay or lagging since it's directly connected." << endl;
		cout << "      No battery needed, always powered through cable." << endl;
		cout << "Cons: Limited Mobility ,cable may restricts movement and can get tangled." << endl;
		cout << "      Less portable, cable may inconvenient for travel or carry out." << endl;
		cout << endl;
		cout << "Microphone :" << endl;
		cout << "------------" << endl;
		cout << "K. XIAOAMI Headset With Microphone RM 250.99" << endl;
		cout << "Pros: Better audio privacy, sound is directed to your ears only and great for calls." << endl;
		cout << "      In-mic is close to your mouth, offers better voice input and noise isolation." << endl;
		cout << "Cons: Less comfortable for long use, may cause discomfortable after few hours used." << endl;
		cout << "      Hard to hear others, noise isolation make it difficult to hear other." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "L. XIAOMI Speaker With Microphone RM 150.99" << endl;
		cout << "Pros: Ideal for group use, good for presentation or casual music listening." << endl;
		cout << "      More comfortable, no need wear anything for long periods." << endl;
		cout << "Cons: Mic may pick up backgrond noise, since the mic is not close to your mouth." << endl;
		cout << "      Less noise isolation ." << endl;
		cout << endl;
		cout << "Enter your choice :";
		cin >> A_itembuy;
		cout << "Quantity :";
		cin >> A_qty;
	}
	identity_addon_price_name();
	A_total = A_priceitem * A_qty;
	cout << "Your choice is " << A_itembuy << "and the price per pax is RM " << fixed << setprecision(2) << A_priceitem << endl;
	cout << "The total of " << A_itembuy << "." << A_itemname << " is RM " << fixed << setprecision(2) << A_priceitem << "x" << A_qty << " : RM" << fixed << setprecision(2) << A_total << endl;
	ordernum++;
	custnum++;

	identity_payment();
	cout << "Thank you !!!" << endl;
	cout << "Proceeding to invoice..." << endl;
	invoice();
	cout << "Select payment method (A:E-Wallet / B:Credit Card / C:Debit Card / D:Cash) :";
	cin >> payment;
	while (payment != 'A' && payment != 'a' && payment != 'B' && payment != 'b' && payment != 'C' && payment != 'c' && payment != 'D' && payment != 'd')
	{
		cout << "Invalid payment..." << endl;
		cout << "Please choose again payment method..." << endl;
		cin >> payment;
	}
	cout << "Total Amount: RM" << fixed << setprecision(2) << A_final << endl;
	cout << endl;
	receipt();


}

void order_menu()   // 1st time order
{
	time();
	cout << "Welcome CSG Gadget Shop!!!" << endl;
	cout << "Please choose an accessory. (A-PHONE / B-COMPUTER) :";
	cin >> accessory;

	while (accessory != 'A' && accessory != 'a' && accessory != 'B' && accessory != 'b')
	{
		cout << "Invalid choice..." << endl;
		cout << "Please enter again..." << endl;
		cin >> accessory;
	}
	if (accessory == 'A' || accessory == 'a')
	{
		cout << "Adapter :" << endl;
		cout << "---------" << endl;
		cout << "A. XIAOMI Universal Travel Adapter RM 65.99" << endl;
		cout << "Pros: Device work on 100+ countires." << endl;
		cout << "      Multiple USB ports - caherge multiple device at once." << endl;
		cout << "Cons: Heavier than single plug adapter." << endl;
		cout << "      Higher price point." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "B. XIAOMI Plug Adapter  RM 25.99" << endl;
		cout << "Pros: Lightweight and fits easily in your pocket." << endl;
		cout << "      Get one for each destination with lower price." << endl;
		cout << "Cons: Works only in one plug type." << endl;
		cout << "      No USB ports - you have to seperate charge your device." << endl;
		cout << endl;
		cout << "Powerbank :" << endl;
		cout << "-----------" << endl;
		cout << "C. XIAOMI High Capacity Powerbank RM 150.99" << endl;
		cout << "Pros: Large capacity suitable for long trips." << endl;
		cout << "      Multiple devices charging at once." << endl;
		cout << "Cons: Large size and weight, less portable." << endl;
		cout << "      Longer charging time, takes more time to recharge." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "D. XIAOMI Portable Powerbank RM 70.99" << endl;
		cout << "Pros: Light and compact, easy to handleas and carry out." << endl;
		cout << "      Fast charging with quicker recharge times." << endl;
		cout << "Cons: Smaller capacity, provides limited cahrges." << endl;
		cout << "      Required frequent recharging when long trips." << endl;
		cout << endl;
		cout << "USB Cable :" << endl;
		cout << "-----------" << endl;
		cout << "E. XIAOMI Fast Charge USB-C Cable RM 50.99" << endl;
		cout << "Pros: Reversible plug, easy to use." << endl;
		cout << "      Fast date transfer and charging." << endl;
		cout << "Cons: Requires compatible devices to support fast charging." << endl;
		cout << "      Shorter lifespan if used with non-fast charging devices regularly." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "F. XIAOMI Normal USB-C Cable RM 25.99" << endl;
		cout << "Pros: Durable, built to withstand daily wear and tear." << endl;
		cout << "      More affordable, offering great value for basic charging." << endl;
		cout << "Cons: Limited to standard cahrging." << endl;
		cout << "      May not support higher power output for power-hungry devices." << endl;
		cout << endl;
		cout << "Lightning Cable :" << endl;
		cout << "-----------------" << endl;
		cout << "G. XIAOMI Fast Charge Lightning Cable RM 60.99" << endl;
		cout << "Pros: Support fast charging with USB PD." << endl;
		cout << "      Efficient charging, can charge up 50% in about 30 minutes." << endl;
		cout << "Cons: May cause battery damage." << endl;
		cout << "      More expensive than normal Lightning cable." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "H. XIAOMI Normal Lightning Cable RM 30.99" << endl;
		cout << "Pros: Protect battery well, won't be damage to battery." << endl;
		cout << "      Affordable, offering great value for basic charging and syncing needs." << endl;
		cout << "Cons: Slower charging speed compared to fast charge cables." << endl;
		cout << "      Do not support fast charging for iPhone." << endl;
		cout << endl;
		cout << "Bluetooth Earbuds :" << endl;
		cout << "-------------------" << endl;
		cout << "I. XIAOMI TWS (True Wireless Stereo) Bluetooth Earbuds RM 30.99" << endl;
		cout << "Pros: Completely wireless, providing full freedom of movement." << endl;
		cout << "      Small and lightweight, easy handle and carry out." << endl;
		cout << "Cons: Due to small size, esaily misplaced." << endl;
		cout << "      Limited battery life, needs to be charged regularly." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "J. XIAOMI Neckband Bluetooth Earphone RM 50.99" << endl;
		cout << "Pros: Stable fit, suitable for sports and active use." << endl;
		cout << "      Better sound quality, Large battery and space provide clearer sound." << endl;
		cout << "Cons: Not fully wireless, neckband still connects with earbuds." << endl;
		cout << "      More heavier, user might feel cumbersome during extended use." << endl;
		cout << "Wired Earbuds :" << endl;
		cout << "---------------" << endl;
		cout << "K. XIAOMI Over-Ear Headphones RM 80.99" << endl;
		cout << "Pros: Better sound quality especially in terms of bass and immersive audio experience." << endl;
		cout << "      Excellent noise isolation, ideal for focused listening." << endl;
		cout << "Cons: Heavy and not suitable for active movements." << endl;
		cout << "      Hard to hear others, noise isolation make it difficult to hear other." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "L. XIAOMI In-Ear Headphones RM 30.99" << endl;
		cout << "Pros: Small size and easy carry around." << endl;
		cout << "      Perfect for exercise such as running and cycling." << endl;
		cout << "Cons: Sound quality is not as rich." << endl;
		cout << "      Less noise isolation ." << endl;
		cout << endl;
		cout << "Enter your choice :";
		cin >> itembuy;
		cout << "Quantity x";
		cin >> qty;
	}
	else if (accessory == 'B' || accessory == 'b')
	{
		cout << "Laptop Charger :" << endl;
		cout << "----------------" << endl;
		cout << "A. Dell 65W Laptop Charger RM 189.99" << endl;
		cout << "Pros: Reliable Brand, many users have high trust quality of DELL." << endl;
		cout << "      Stable charging, less risk of overheating and extend battery life." << endl;
		cout << "Cons: Higher price compared to third-party alternatives." << endl;
		cout << "      Not compatible with other brands." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "B. HP 65W Laptop Charger  RM 159.99" << endl;
		cout << "Pros: Higher compatibility with many HP laptop models." << endl;
		cout << "      Portable, lightweight and easy carry to somewhere." << endl;
		cout << "Cons: Slower charging speed while 65W is sufficient for most regular task." << endl;
		cout << "      Brand-Specific compatibility, charger is limited to HP laptops." << endl;
		cout << endl;
		cout << "USB Hub :" << endl;
		cout << "---------" << endl;
		cout << "C. Ugreen 4-Port USB Hub RM 70.99" << endl;
		cout << "Pros: High Speed transfer, offers data transfer speed up to 5Gbps." << endl;
		cout << "      No external power required, powered by computer's USB port only." << endl;
		cout << "Cons: Limited Ports, 4 ports may not sufficient for who need connect many devices" << endl;
		cout << "      Basic use, may have limitation if user need connect high-power devices." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "D. Anker 7-Port USB Hub RM 140.99" << endl;
		cout << "Pros: 7-Port design, perfect for connecting multiple devices at once." << endl;
		cout << "      External power support, can get external power to provide additional power ofr high-demand devices." << endl;
		cout << "Cons: Requires External Power, high-power devices will need an external power source." << endl;
		cout << "      7-port version is larger and takes up more space." << endl;
		cout << endl;
		cout << "USB Flash Drive :" << endl;
		cout << "-----------------" << endl;
		cout << "E. SanDisk USB Flash Drive 16GB RM 25.99" << endl;
		cout << "Pros: Affordable, with 16GB storage, this flash drive is budget-friendly." << endl;
		cout << "      Compact and portable, small size easy to carry aroung." << endl;
		cout << "Cons: Limited storage, only 16GB of storage may not enough for who need store large file." << endl;
		cout << "      Plastic build, the plastic casing may be more prone to damage from physical impacts." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "F. Kingston USB Flash Drive 64GB RM 30.99" << endl;
		cout << "Pros: Large storage capacity, can store and transfer larger file." << endl;
		cout << "      Durable design, robust moterials provide better protection from physical impact." << endl;
		cout << "Cons: More expensive, may not worth the value for who only need store small file." << endl;
		cout << "      Low speed especially for very large file transfer and store." << endl;
		cout << endl;
		cout << "External Hard Drive :" << endl;
		cout << "---------------------" << endl;
		cout << "G. WD 1TB External Hard Drive RM 250.99" << endl;
		cout << "Pros: Large storage capacity, perfect for who need storage for videos, photos and games." << endl;
		cout << "      Reliable brand, WD is know for producing durable and high quality product." << endl;
		cout << "Cons: Higher price, generally more expensive then 512GB hard drive." << endl;
		cout << "      Not compatibility with Mac, some models from MacBook may not compatible." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "H. Seagate 512GB External Hard Drive RM 180.99" << endl;
		cout << "Pros: More affordabl, more chepater and suitable for budget-conscious users." << endl;
		cout << "      Lower Power consumption, less power usage and good for ultrabooks and everyday use." << endl;
		cout << "Cons: Limited Storage Space, may not enough for large games and multimedia files." << endl;
		cout << "      May require addtional storage, might need external drive again for extra space." << endl;
		cout << endl;
		cout << "Mouse :" << endl;
		cout << "-------" << endl;
		cout << "I. XIAOAMI Wireless Mouse RM 20.99" << endl;
		cout << "Pros: Completely wireless, providing full freedom of movement." << endl;
		cout << "      Small and lightweight, easy handle and carry out." << endl;
		cout << "Cons: Battery dependency, requires battery replacement." << endl;
		cout << "      May experience lag or disconeects due to wireless interference." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "J. XIAOAMI Wired Mouse RM 30.99" << endl;
		cout << "Pros: Stable connection, no delay or lagging since it's directly connected." << endl;
		cout << "      No battery needed, always powered through cable." << endl;
		cout << "Cons: Limited Mobility ,cable may restricts movement and can get tangled." << endl;
		cout << "      Less portable, cable may inconvenient for travel or carry out." << endl;
		cout << endl;
		cout << "Microphone :" << endl;
		cout << "------------" << endl;
		cout << "K. XIAOAMI Headset With Microphone RM 250.99" << endl;
		cout << "Pros: Better audio privacy, sound is directed to your ears only and great for calls." << endl;
		cout << "      In-mic is close to your mouth, offers better voice input and noise isolation." << endl;
		cout << "Cons: Less comfortable for long use, may cause discomfortable after few hours used." << endl;
		cout << "      Hard to hear others, noise isolation make it difficult to hear other." << endl;
		cout << setw(100) << setfill('-') << "" << endl;
		cout << "L. XIAOMI Speaker With Microphone RM 150.99" << endl;
		cout << "Pros: Ideal for group use, good for presentation or casual music listening." << endl;
		cout << "      More comfortable, no need wear anything for long periods." << endl;
		cout << "Cons: Mic may pick up backgrond noise, since the mic is not close to your mouth." << endl;
		cout << "      Less noise isolation ." << endl;
		cout << endl;
		cout << "Enter your choice :";
		cin >> itembuy;
		cout << "Quantity x";
		cin >> qty;
	}
	identity_price_name();
	total = priceitem * qty;
	cout << "Your choice is " << itembuy << "." << itemname << " and the price per pax is RM " << fixed << setprecision(2) << priceitem << endl;
	cout << "The total of " << itembuy << "." << itemname << " is RM " << fixed << setprecision(2) << priceitem << "x" << qty << " : RM" << fixed << setprecision(2) << total << endl;
	ordernum++;
	custnum++;
	cout << "Would you like to add on something ? You only can add on once!!! (Y/N) :";
	cin >> addon_order;

	while (addon_order != 'Y' && addon_order != 'y' && addon_order != 'N' && addon_order != 'n')
	{
		cout << "Invalid choice..." << endl;
		cout << "Please enter again...";
		cin >> addon_order;
	}
	if (addon_order == 'Y' || addon_order == 'y')
	{
		addon_order_menu();
	}
	else if (addon_order == 'N' || addon_order == 'n')
	{
		identity_payment();
		cout << "Thank you !!!" << endl;
		cout << "Proceeding to invoice..." << endl;
		invoice();
		cout << "Select payment method (A:E-Wallet / B:Credit Card / C:Debit Card / D:Cash) :";
		cin >> payment;
		while (payment != 'A' && payment != 'a' && payment != 'B' && payment != 'b' && payment != 'C' && payment != 'c' && payment != 'D' && payment != 'd')
		{
			cout << "Invalid payment..." << endl;
			cout << "Please choose again payment method..." << endl;
			cin >> payment;
		}
		cout << "Total Amount: RM" << fixed << setprecision(2) << final << endl;
		cout << endl;
		receipt();

	}

}

void invoice()  // invoice
{
	time();
	identity_price_name();
	total = priceitem * qty;

	cout << "        CSG Gadget Shop" << endl;
	cout << "=========================================" << endl;
	cout << "        Tel: 012-3456789" << endl;

	cout << endl;
	cout << "Invoice No: " << ordernum << setw(30) << day << "/" << month << "/" << year << endl;
	cout << "1." << itemname << "(" << qty << "x" << priceitem << ")" << "      " << "RM " << fixed << setprecision(2) << total << endl;

	if (addon_order == 'N' || addon_order == 'n')
	{
		if (total >= 100.00)
		{
			cout << "Congratulations for get 20% discount since you spend over RM 100.00 !!" << endl;
			discountrate = total * discount;
			afterdiscount = total - discountrate;
			chargerate = total * charge;
			taxrate = total * tax;
			final = afterdiscount + chargerate + taxrate;
		}
		else
		{
			chargerate = total * charge;
			taxrate = total * tax;
			final = total + chargerate + taxrate;
		}
		cout << "Subtotal" << "                              " << "RM " << fixed << setprecision(2) << total << endl;
		cout << "Discount" << "                              " << "RM " << fixed << setprecision(2) << discountrate << endl;
		cout << "Service Charge (6%)" << "                   " << "RM " << fixed << setprecision(2) << chargerate << endl;
		cout << "Tax (6%)" << "                              " << "RM " << fixed << setprecision(2) << taxrate << endl;
		cout << endl;
		cout << "Total items:" << qty << endl;
		cout << "Total Amount:" << "                        " << "RM " << fixed << setprecision(2) << final << endl;
	}
	else if (addon_order == 'Y' || addon_order == 'y')
	{
		A_total = A_priceitem * A_qty;
		AA_total = total + A_total;

		cout << "2." << A_itemname << "(" << A_qty << "x" << A_priceitem << ")" << "                     " << "RM " << fixed << setprecision(2) << A_total << endl;

		if (AA_total >= 100.00)
		{
			cout << "Congratulations for get 20% discount since you spend over RM 100.00 !!" << endl;
			discountrate = total * discount;
			afterdiscount = total - discountrate;
			chargerate = total * charge;
			taxrate = total * tax;
			final = afterdiscount + chargerate + taxrate;

			A_discountrate = A_total * discount;
			A_afterdiscount = A_total - discountrate;
			A_chargerate = A_total * charge;
			A_taxrate = A_total * tax;
			A_final = afterdiscount + chargerate + taxrate;

			AA_discountrate = A_discountrate + discountrate;
			AA_afterdiscount = A_afterdiscount + afterdiscount;
			AA_chargerate = A_chargerate + chargerate;
			AA_taxrate = A_taxrate + taxrate;
			AA_final = A_final + final;
			AA_qty = A_qty + qty;
		}
		else
		{
			chargerate = total * charge;
			taxrate = total * tax;
			final = total + chargerate + taxrate;

			A_chargerate = A_total * charge;
			A_taxrate = A_total * tax;
			A_final = A_total + chargerate + taxrate;
			AA_chargerate = A_chargerate + chargerate;
			AA_taxrate = A_taxrate + taxrate;
			AA_final = A_final + final;
			AA_qty = A_qty + qty;
		}
		cout << "Subtotal" << "                    " << "RM " << fixed << setprecision(2) << AA_total << endl;
		cout << "Discount" << "                    "  << "RM " << fixed << setprecision(2) << AA_discountrate << endl;
		cout << "Service Charge (6%)" << "         " << "RM " << fixed << setprecision(2) << AA_chargerate << endl;
		cout << "Tax (6%)" << "                    " << "RM " << fixed << setprecision(2) << AA_taxrate << endl;
		cout << endl;
		cout << "Total items:" << AA_qty << endl;
		cout << "Total Amount:" << setw(30) << "RM " << fixed << setprecision(2) << AA_final << endl;
	}
}

void receipt() // receipt after invoice
{
	identity_payment();
	time();
	identity_price_name();
	invoice();
	cout << endl;
	cout << endl;
	cout << "Paid Amount        : RM";
	cin >> fixed >> setprecision(2) >> amount;
	cout << "Payment Method     : " << payment_method << endl;
	cout << "Payment Amount     : RM " << fixed << setprecision(2) << amount << endl;
	if (addon_order == 'Y' || addon_order == 'y')
	{
		change = amount - AA_final;
	}
	else if (addon_order == 'N' || addon_order == 'n')
	{
		change = amount - final;
	}
	cout << "Change             : RM " << fixed << setprecision(2) << change << endl;
}

void customer_service()  // proceed warranty/refund (additional function)
{
		cout << "Would you like to refund or claim warranty? (R/W) : ";
		cin >> cust_choice;
	while (cust_choice != 'R' && cust_choice != 'r' && cust_choice != 'W' && cust_choice != 'w')
	{
		cout << "Invalid choice..." << endl;
		cout << "Please enter again : ";
		cin >> cust_choice;
	}
	if (cust_choice == 'R' || cust_choice == 'r')
	{
		refund();
	}
	else if (cust_choice == 'W' || cust_choice == 'w')
	{
		warranty();
	}
	
}

void refund()  // proceed refund
{
	time();
	cout << "Enter your name :";
	cin.ignore();
	getline(cin, cust_R_name);

	cout << "Enter phone number without - :";
	cin >> cust_R_phone;

	cout << "Enter name of product you want to refund : ";
	cin.ignore();
	getline(cin, refund_product);

	cout << "Enter price of product :";
	cin >> refundprice;

	cout << "Please select a reason for refund request:" << endl;
	cout << "1. Product is not working." << endl;
	cout << "2. Received the wrong model or color." << endl;
	cout << "3. Physical damage found upon opening." << endl;
	cout << "4. Battery issue." << endl;
	cout << "5. Item is not compatible with my device." << endl;
	cout << "6. Wrong quantity received." << endl;
	cout << "7. Other." << endl;
	cout << "Enter the number of your reason (1-7): ";
	cin >> choice_R_reason;

	while (choice_R_reason < 1 || choice_R_reason > 7)
	{
		cout << "Invalid choice..." << endl;
		cout << "Please enter again :";
		cin >> choice_R_reason;
	}

	identity_refund_reason();

	cout << "-------- Refund Request Confirmation --------" << endl;
	cout << "Name             :" << cust_R_name << endl;
	cout << "Phone number     :" << cust_R_phone << endl;
	cout << "Product          :" << refund_product << endl;
	cout << "Price            :" << fixed << setprecision(2) << refundprice << endl;
	cout << "Refund reason  :" << refund_reason << endl;
	cout << endl;
	cout << "Please confirm your information is correct (Y/N) :";
	cin >> confirm_refund;

	while (confirm_refund != 'Y' && confirm_refund != 'y' && confirm_refund != 'N' && confirm_refund != 'n')
	{
		cout << "Invalid choice..." << endl;
		cout << "Please enter again : ";
		cin >> confirm_refund;
	}

	if (confirm_refund == 'Y' || confirm_refund == 'y')
	{
		cout << "Your refund request is done !" << endl;
		cout << "Any issue please contact our hotline (0123456789)" << endl;
		cout << "Here is your receipt !!!" << endl;
		refund_num++;
		receipt_refund();
		cout << "Thank you !!!" << endl;
		cout << "Have a nice day !!!" << endl;
	}
	else if (confirm_refund == 'N' || confirm_refund == 'n')
	{
		cout << endl;
		cout << "Back to main page..." << endl;
		cout << endl;
		menu();
	}
}

void receipt_refund()  // receipt for refund
{
	time();
	cout << "Invoice No :" << refund_num << "                " << day << "/" << month << "/" << year << endl;
	cout << "Product    :" << refund_product << endl;
	cout << "Reason :" << refund_reason << endl;
	cout << "Your refund request result will be notified within 3 days." << endl;
	cout << "Don't forget to check WhatsApp for the update!" << endl;

}

void warranty()  // proceed warranty
{
	time();
	cout << "Enter your name :";
	cin.ignore();
	getline(cin, cust_name);

	cout << "Enter phone number without - :";
	cin >> cust_phone;

	cout << "Enter name of product you want to claim warranty : ";
	cin.ignore();
	getline(cin, warranty_product);

	cout << "Please select a reason for warranty request:" << endl;
	cout << "1. Manufacturing defect." << endl;
	cout << "2. Hardware failure." << endl;
	cout << "3. Software issue." << endl;
	cout << "4. Improper usage." << endl;
	cout << "5. Normal wear and tear." << endl;
	cout << "6. External factor." << endl;
	cout << "7. Other." << endl;
	cout << "Enter the number of your reason (1-7): ";
	cin >> choice_reason;
	
	while (choice_reason < 1 || choice_reason > 7)
	{
		cout << "Invalid choice..." << endl;
		cout << "Please enter again :";
		cin >> choice_reason;
	}

	identity_warranty_reason();

	cout << "Please enter warranty expire date (YYYY MM DD , seperated by space) : ";
	cin >> W_year >> W_month >> W_date;

	identity_warranty_date();
	compare_warranty_date();

	cout << "-------- Warranty Request Confirmation --------" << endl;
	cout << "Name             :" << cust_name << endl;
	cout << "Phone number     :" << cust_phone << endl;
	cout << "Product          :" << warranty_product << endl;
	cout << "Warranty reason  :" << warranty_reason << endl;
	cout << "Warranty expired :" << W_date << " / " << W_month << " / " << W_year << endl;
	cout << endl;
	cout << "Please confirm your information is correct (Y/N) :";
	cin >> confirm_warranty;

	while (confirm_warranty != 'Y' && confirm_warranty != 'y' && confirm_warranty != 'N' && confirm_warranty != 'n')
	{
		cout << "Invalid choice..." << endl;
		cout << "Please enter again : ";
		cin >> confirm_warranty;
	}

	if (confirm_warranty == 'Y' || confirm_warranty == 'y')
	{
		cout << "Your warranty request is done !" << endl;
		cout << "Any issue please contact our hotline (0123456789)" << endl;
		cout << "Here is your receipt !!!" << endl;
		warranty_num++;
		receipt_warranty();
		cout << "Thank you !!!" << endl;
		cout << "Have a nice day !!!" << endl;
	}
	else if (confirm_warranty == 'N' || confirm_warranty == 'n')
	{
		cout << endl;
		cout << "Back to main page..." << endl;
		cout << endl;
		menu();
	}
}

void receipt_warranty()  // receipt for warranty
{
	cout << "Invoice No :" << warranty_num << "                " << day << "/" << month << "/" << year << endl;
	cout << "Item   :" << warranty_product << endl;
	cout << "Reason :" << warranty_reason << endl;
	cout << "Your warranty request result will be notified within 3 days." << endl;
	cout << "Don't forget to check WhatsApp for the update!" << endl;
}

void report()
{
	cout << day << "/" << month << "/" << year << endl;
	cout << "Today total customer : " << custnum << endl;
	cout << "Today total warranty : " << warranty_num << endl;
	cout << "Today total refund   : " << refund_num << endl;
}

void menu()  // daily report
{
	cout << setw(29) << "CSG Gadget Shop" << endl;
	cout << setw(33) << "LOT 1851-A, Jalan KPB 6," << endl;
	cout << setw(36) << "KAWASAN PERINDUSTRIAN BELAKONG" << endl;
	cout << setw(36) << "43300 SERI KEMBANGAN, SELANGOR" << endl;
	cout << setw(33) << "(MID VALLEY SHOPPING MALL)" << endl;
	cout << setw(33) << "Hotline support : 0123456789" << endl;
	cout << setw(40) << "" << endl;
	do {
		cout << "\n[-Welcome to CSG Gadget Shop-]" << endl;
		cout << "Please choose an option:" << endl;
		cout << "A. Menu" << endl;
		cout << "B. Customer service" << endl;
		cout << "C. Report." << endl;
		cout << "D. Exit." << endl;
		cout << "Enter your choice: ";
		cin >> menuchoice;

		switch (menuchoice)
		{
		case 'A': case 'a':
			order_menu();
			cout << endl;
			cout << "Thanks for using our system !!!" << endl;
			cout << "Have a nice day!!!" << endl;
			cout << endl;
			break;
		case 'B': case 'b' :
			customer_service();
			break;
		case 'C': case 'c':
			cout << endl;
			report();
			break;
		case 'D': case 'd':
			cout << "Thanks for using our system !!!" << endl;
			cout << "Have a nice day!!!" << endl;
			break;
		default:
			cout << "Invalid choice. Please try again." << endl;
			break;
		}


	} while (menuchoice != 'D' && menuchoice != 'd'); 
}

int main() 
{
	time();

	menu();

	return 0;
}
