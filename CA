.MODEL SMALL
.STACK 100H

.DATA
	SALES_COUNT_1_A		DB  0    ; FOR BUN A WHICH IS CHEESE BUN
	SALES_COUNT_1_B 	DB  0    ; FOR BUN B... 
	SALES_COUNT_2_A 	DB  0    ; FOR CAKE A...
	SALES_COUNT_2_B 	DB  0    ; FOR CAKE B...

	PRESS_KEY_ENTER		DB	"PRESS <ENTER> TO EXIT$"


	SALES_REPORT_TITLE 	DB  "=== SALES REPORT ===", 0AH, 0DH,"$"
	SALES_ITEM_1_A 		DB  "Cheese bun Sold    : $"
	SALES_ITEM_1_B 		DB  "Potato bun Sold    : $"
	SALES_ITEM_2_A 		DB  "Chocolate cake Sold: $"
	SALES_ITEM_2_B 		DB  "Banana cake Sold   : $"
	TOTAL_SALES 		DB  "Total Sales        : $"
	
        ;==================================;Menu and submenu for customer=========================================================
	SHOPNAME			DB	"   _______________________________________________ ", 0AH, 0DH  ;00H
						DB	"  |                                               |", 0AH, 0DH  ;01H	
						DB  "  |  ==============One Bite Bakery==============  |", 0AH, 0DH  ;02H
						DB  "  |            ---     -----    -----             |", 0AH, 0DH  ;03H
						DB  "  |          /     \   |  _  \  |  _  \           |", 0AH, 0DH  ;04H
						DB  "  |         |  / \  |  |     /  |     /           |", 0AH, 0DH  ;05H
						DB  "  |         |  \ /  |  |  _  \  |  _  \           |", 0AH, 0DH  ;06H
						DB  "  |          \     /   |     /  |     /           |", 0AH, 0DH  ;07H
						DB  "  |            ---     -----    -----             |", 0AH, 0DH  ;08H
						DB	"  |                                               |", 0AH, 0DH	 ;09H
						DB	"  |   1. View Menu                                |", 0AH, 0DH  ;0AH
						DB	"  |   2. Staff Login                              |", 0AH, 0DH	 ;0BH	
						DB	"  |   3. Exit                                     |", 0AH, 0DH	 ;0CH
						DB	"  |                                               |", 0AH, 0DH	 ;0DH	
						DB	"  |   Enter your selection:                       |", 0AH, 0DH	 ;0EH	
						DB	"  |                                               |", 0AH, 0DH	 ;0FH	
						DB	"  |                                               |", 0AH, 0DH	 ;10H	
						DB	"  |                                               |", 0AH, 0DH	 ;11H	
						DB	"  |                                               |", 0AH, 0DH	 ;12H
						DB	"  |                                               |", 0AH, 0DH	 ;13H
						DB	"  |                                               |", 0AH, 0DH	 ;14H
						DB	"  |                                               |", 0AH, 0DH	 ;15H
						DB	"  |                                               |", 0AH, 0DH	 ;16H
						DB	"  |                                               |", 0AH, 0DH	 ;17H
						DB	"  |_______________________________________________|", 0AH, 0DH,"$";18H
								
	SHOPNAME_INVALID	DB	"  |    INVALID SELECTION!!! PLEASE RE-ENTER...    |", 0AH, 0DH	 ;10H	
						DB	"  |             PRESS <ENTER> TO RETRY            |", 0AH, 0DH	 ;11H	
						DB	"  |                                               |", 0AH, 0DH,"$"	 ;12H

	MENU_SELECTION  	DB ?
	MENU_THANKS			DB	"  |        Thankyou for using our system!         |", 0AH, 0DH	 ;0AH
						DB	"  |               Have a nice day!                |", 0AH, 0DH	 ;0BH
						DB	"  |                                               |", 0AH, 0DH	 ;0CH
						DB	"  |_______________________________________________|", 0AH, 0DH	 ;0DH	
						DB	"                                                   ", 0AH, 0DH	 ;0EH	
						DB	"                                                   ", 0AH, 0DH	 ;0FH	
						DB	"                                                   ", 0AH, 0DH	 ;10H	
						DB	"                                                   ", 0AH, 0DH	 ;11H	
						DB	"                                                   ", 0AH, 0DH	 ;12H
						DB	"                                                   ", 0AH, 0DH	 ;13H
						DB	"                                                   ", 0AH, 0DH	 ;14H
						DB	"                                                   ", 0AH, 0DH	 ;15H
						DB	"                                                   ", 0AH, 0DH	 ;16H
						DB	"                                                   ", 0AH, 0DH	 ;17H
						DB	"                                                   ", 0AH, 0DH,"$";18H
						
	RETURN_BACK_MAIN 	DB	"RETURN >> {R}$"
	
	
	;====================================;Admin Login and logout module==================================================
	STRFONT 			DB	"   _______________________________________________ ", 0AH, 0DH  ;00H
						DB	"  |                                               |", 0AH, 0DH  ;01H	
						DB  "  |   <<<<<{*** Welcome To Login Page ***}>>>>>   |", 0AH, 0DH  ;02H
						DB  "  |                                               |", 0AH, 0DH  ;03H
						DB  "  |                WELCOME   STAFF                |", 0AH, 0DH  ;04H
						DB  "  |    PLEASE  LOGIN  TO  ACCESS  YOUR  ACCOUNT   |", 0AH, 0DH  ;05H
						DB  "  |                                               |", 0AH, 0DH  ;06H
						DB  "  |                                               |", 0AH, 0DH  ;07H
						DB  "  |         _____________________________         |", 0AH, 0DH  ;08H
						DB	"  |        |                             |        |", 0AH, 0DH	 ;09H
						DB	"  |        |                             |        |", 0AH, 0DH  ;0AH
						DB	"  |        |                             |        |", 0AH, 0DH	 ;0BH	
						DB	"  |        |                             |        |", 0AH, 0DH	 ;0CH
						DB	"  |        |                             |        |", 0AH, 0DH	 ;0DH	
						DB	"  |        |_____________________________|        |", 0AH, 0DH	 ;0EH	
						DB	"  |                                               |", 0AH, 0DH	 ;0FH	
						DB	"  |                                               |", 0AH, 0DH	 ;10H	
						DB	"  |                                               |", 0AH, 0DH	 ;11H	
						DB	"  |                                               |", 0AH, 0DH	 ;12H
						DB	"  |                                               |", 0AH, 0DH	 ;13H
						DB	"  |                                               |", 0AH, 0DH	 ;14H
						DB	"  |                               RETURN  {R}     |", 0AH, 0DH	 ;15H
						DB	"  |                                               |", 0AH, 0DH	 ;16H
						DB	"  |                                               |", 0AH, 0DH	 ;17H
						DB	"  |_______________________________________________|", 0AH, 0DH,"$";18H
						
	STRFONT_LOGIN_R		DB	"  |                               RETURN  {R}     |", 0AH, 0DH,"$"	 ;15H					
						
	USERNAME       		DB  "  |            Username :                         |", 0AH, 0DH ;0AH
						DB	"  |            Password :                         |", 0AH, 0DH,"$"	 ;0BH
	
	PASSWORD			DB	"  |            Password :                         |", 0AH, 0DH	 ;0BH
						DB	"  |                                               |", 0AH, 0DH	 ;0CH
						DB	"  |               <ENTER>  TO LOG IN              |", 0AH, 0DH,"$" ;0DH		

	INVALID_STRFONT_PSW	DB	"  |       INVALID username or password !!!        |", 0AH, 0DH	 ;11H	
						DB	"  |            PRESS <ENTER> TO RETRY             |", 0AH, 0DH	 ;12H
	NL 					DB  0AH,0DH,"$"						
	;Admin Login: 
	TARUMT   			DB "tarumt$"; USERNAME
	VERIFY  			DB "mrloh$" ; PSW(2)
	;Admin input username and password: 
	USER     			DB 12 DUP("$")
	PSW      			DB 12 DUP("$")  
	
	;Secure Logout:
	
	;Admin Menuï¼šSales Report
	SYSTEM      DB "===WELCOME TO ADMIN SYSTEM===$"
	CHECKING    DB "    SALES REPORT CHECKING   [1] >$"
	XCHECKING   DB "    EXIT  |  LOG-OUT        [2] >$"
	ENSURE      DB "    ARE YOU SURE TO CONTINUE LOG-OUT (EXIT)? [Y/N]$"
	SELECTION   DB ?
	INVALIDSEC  DB "INVALID SELECTION!!! PLEASE RE-ENTER...$"
	LEAVING     DB "    PRESS <ENTER> TO EXIT"
	
	REMOVEINV   DB "	   PRESS <ENTER> TO RETURN$"
	
	HERE DB "HERE IS REPORT$"
	
	
	
	
	
	
	
	;PRODUCT INFO										
    PROD_1_A_MSG 		DB "CHEESE BUN  [RM 2.00]       $"
    PROD_1_B_MSG 		DB "POTATO BUN  [RM 3.00]       $"
    PROD_2_A_MSG 		DB "CHOCOLATE CAKE  [RM 4.00]   $"
    PROD_2_B_MSG 		DB "BANANA CAKE     [RM 5.00]       $"
	MULTIPLY_SYMBOL		DB "    x $"
	
	QTY_PROD_MSG		DB	"  | _____________________________________________ |", 0AH, 0DH
						DB	"  | ********************************************* |", 0AH, 0DH
						DB	"  |                                               |", 0AH, 0DH
						DB	"  |       Enter quantity (01-99) :    $"
    PROD_CURRENT_PRICE  DB	"  |                                               |", 0AH, 0DH
						DB  "  |       Current total cost : RM  $"
    ENTER_CONFIRM     	DB  "  |                                               |", 0AH, 0DH
						DB	"  |       Press <ENTER> to confirm payment..      |", 0AH, 0DH,"$"
    
    INVALID_INPUT   	DB "Invalid input!!! Try again...",0AH,0DH,"$"
    
    SELECTED_CATEGORY  	DB ?
    SELECTED_PROD 		DB ?
    QTY_OF_PROD     	DB ?    ;  55
    PRICE_OF_PROD      	DB ?    ;   4
    TOTAL_COST      	DW ?    ; 220
    
    PRESS_TO_EXIT      	DB "Press any key to exit...$"
    PRICE_DECIMAL_POINT DB ".00$"
	
	WELC_TO_MSG			DB	"   _______________________________________________ ", 0AH, 0DH	 ;00H
						DB	"  |                                               |", 0AH, 0DH	 ;01H
						DB  "  |   {[> == == ==  WELCOME TO OBB == == == <]}   |", 0AH, 0DH	 ;02H
						DB	"  |   _________________________________________   |", 0AH, 0DH	 ;03H
						DB	"  |   *****************************************   |", 0AH, 0DH	 ;04H
						DB	"  |                                               |", 0AH, 0DH	 ;05H
						DB	"  |    CATEGORY OF PRODUCTS :                     |", 0AH, 0DH	 ;06H
						DB	"  |    _______________________________________    |", 0AH, 0DH	 ;07H
						DB	"  |   | ************************************* |   |", 0AH, 0DH	 ;08H
						DB	"  |   |   {1}    BUN                          |   |", 0AH, 0DH	 ;09H
						DB	"  |   |   {2}    CAKE                         |   |", 0AH, 0DH	 ;0AH
						DB	"  |   |_______________________________________|   |", 0AH, 0DH	 ;0BH
						DB	"  |                                               |", 0AH, 0DH  ;0CH
						DB	"  |    SELECTION :         ||    RETURN >> {R}    |", 0AH, 0DH	 ;0DH
						DB	"  |                                               |", 0AH, 0DH	 ;0EH
						DB	"  |                                               |", 0AH, 0DH	 ;0FH
						DB	"  |                                               |", 0AH, 0DH	 ;10H
						DB	"  |                                               |", 0AH, 0DH	 ;11H
						DB	"  |                                               |", 0AH, 0DH	 ;12H
						DB	"  |                                               |", 0AH, 0DH	 ;13H
						DB	"  |                                               |", 0AH, 0DH	 ;14H
						DB	"  |                                               |", 0AH, 0DH	 ;15H
						DB	"  |                                               |", 0AH, 0DH	 ;16H
						DB	"  |_______________________________________________|", 0AH, 0DH,"$";17H
																							 ;18H
	LIST_SUBOPT1		DB	"  |    CATEGORY OF PRODUCTS :  BUN                |", 0AH, 0DH	 ;06H
						DB	"  |    _______________________________________    |", 0AH, 0DH	 ;07H
						DB	"  |   | ************************************* |   |", 0AH, 0DH	 ;08H
						DB	"  |   |   {A}    CHEESE BUN    >>   RM 2.00   |   |", 0AH, 0DH	 ;09H
						DB	"  |   |   {B}    POTATO BUN    >>   RM 3.00   |   |", 0AH, 0DH	 ;0AH
						DB	"  |   |_______________________________________|   |", 0AH, 0DH	 ;0BH
						DB	"  |                                               |", 0AH, 0DH  ;0CH
						DB	"  |    SELECT  {A} OR {B}  TO  CONTINUE  ORDER    |", 0AH, 0DH,"$";0DH
					
	LIST_SUBOPT2AB		DB	"   _______________________________________________ ", 0AH, 0DH	 ;00H
						DB	"  |                                               |", 0AH, 0DH	 ;01H
						DB  "  |   {[> == == ==  WELCOME TO OBB == == == <]}   |", 0AH, 0DH	 ;02H
						DB	"  |   _________________________________________   |", 0AH, 0DH	 ;03H
						DB	"  |   *****************************************   |", 0AH, 0DH	 ;04H
						DB	"  |                                               |", 0AH, 0DH	 ;05H
						DB	"  |    CATEGORY OF PRODUCTS :  CAKE               |", 0AH, 0DH	 ;06H
						DB	"  |    _______________________________________    |", 0AH, 0DH	 ;07H
						DB	"  |   | ************************************* |   |", 0AH, 0DH	 ;08H
						DB	"  |   |   {A}    CHOCOLATE CAKE  >> RM 4.00   |   |", 0AH, 0DH	 ;09H
						DB	"  |   |   {B}    BANANA CAKE     >> RM 5.00   |   |", 0AH, 0DH	 ;0AH
						DB	"  |   |_______________________________________|   |", 0AH, 0DH	 ;0BH
						DB	"  |                                               |", 0AH, 0DH  ;0CH
						DB	"  |    SELECT  {A} OR {B}  TO  CONTINUE  ORDER    |", 0AH, 0DH,"$";0DH																					 
	;ACTION
	CUST_SELECTION		DB	?				  ;|18D ==> 12H	
 
	LIST_SELECT_INV		DB	"  |                INVALID CODE!!!                |", 0AH, 0DH ;11H
						DB	"  |           PRESS  <ENTER>  TO  RETURN          |", 0AH, 0DH,"$";0CH

	TO_SEE_RECEIPT		DB	"   _______________________________________________ ", 0AH, 0DH  ;00H
						DB	"  |                                               |", 0AH, 0DH  ;01H	
						DB  "  |                 _    __   __                  |", 0AH, 0DH  ;02H
						DB  "  |               // \\ | _> | _>                 |", 0AH, 0DH  ;03H
						DB  "  |               \\_// |__> |__>                 |", 0AH, 0DH  ;04H
						DB  "  |                                               |", 0AH, 0DH  ;05H
						DB  "  |               One Bite Bakery                 |", 0AH, 0DH  ;06H
						DB  "  |         999. PERSIARAN SUBANG PERMAI          |", 0AH, 0DH  ;07H
						DB  "  |         47500  SUBANG JAYA. SELANGOR          |", 0AH, 0DH  ;08H
						DB	"  |              TEL : 03-14159265                |", 0AH, 0DH	 ;09H
						DB	"  |                                               |", 0AH, 0DH  ;0AH
						DB	"  |   - - - - - - - - - - - - - - - - - - - - -   |", 0AH, 0DH	 ;0BH	
						DB	"  |                                               |", 0AH, 0DH	 ;0CH
						DB	"  |   ITEM                                        |", 0AH, 0DH	 ;0DH	
						DB	"  |                                               |", 0AH, 0DH	 ;0EH	<-
						DB	"  |                                               |", 0AH, 0DH	 ;0FH	
						DB	"  |   - - - - - - - - - - - - - - - - - - - - -   |", 0AH, 0DH	 ;10H	
						DB	"  |                                               |", 0AH, 0DH	 ;11H	<-
						DB	"  |                                               |", 0AH, 0DH	 ;12H
						DB	"  |   *****************************************   |", 0AH, 0DH	 ;13H
						DB	"  |     Thank you for your purchase!	       	   |", 0AH, 0DH	 ;14H
						DB	"  |     Follow our instagram @OBBBakery	       |", 0AH, 0DH	 ;15H
						DB	"  |_______________________________________________|", 0AH, 0DH	 ;16H
						DB	"                                                   ", 0AH, 0DH	 ;17H
						DB	"    TAKE NEW ORDER ?  {Y}         NO , EXIT. {N}   ", 0AH, 0DH	 ;18H
						DB	"                                                   ", 0AH, 0DH,"$";19H	
						
	    ;RECEIPT PART
    
    PROD_LABEL   		DB "  |   $"
    QTY_LABEL  			DB "  |   $"
    TOTAL_COST_LABEL    DB "  |   TOTAL COST                   RM  $"
	
	NO_EXIT_RECEIPT		DB	"                                                   ", 0AH, 0DH	 ;00H
						DB	"                                                   ", 0AH, 0DH	 ;01H
						DB	"                                                   ", 0AH, 0DH	 ;02H		
						DB	"   _______________________________________________ ", 0AH, 0DH	 ;03H
						DB	"  |                                               |", 0AH, 0DH  ;04H	
						DB  "  |                 _    __   __                  |", 0AH, 0DH  ;05H
						DB  "  |               // \\ | _> | _>                 |", 0AH, 0DH  ;06H
						DB  "  |               \\_// |__> |__>                 |", 0AH, 0DH  ;07H
						DB  "  |                                               |", 0AH, 0DH  ;08H
						DB  "  |               One Bite Bakery                 |", 0AH, 0DH  ;09H
						DB  "  |         999. PERSIARAN SUBANG PERMAI          |", 0AH, 0DH  ;0AH
						DB  "  |         47500  SUBANG JAYA. SELANGOR          |", 0AH, 0DH  ;0BH
						DB	"  |              TEL : 03-14159265                |", 0AH, 0DH	 ;0CH
						DB	"  |                                               |", 0AH, 0DH  ;0DH
						DB	"  |   - - - - - - - - - - - - - - - - - - - - -   |", 0AH, 0DH	 ;0EH	
						DB	"  |                                               |", 0AH, 0DH	 ;0FH
						DB	"  |                                               |", 0AH, 0DH  ;10H
						DB	"  |        THANKS FOR USING OUR SYSTEM !!!        |", 0AH, 0DH	 ;11H
						DB	"  |             SEE YOUR NEXT TIME !!!            |", 0AH, 0DH  ;12H
						DB	"  |                                               |", 0AH, 0DH  ;13H	
						DB	"  |_______________________________________________|", 0AH, 0DH	 ;14H	
						DB	"                                                   ", 0AH, 0DH	 ;15H	
						DB	"           <ENTER>  TO  RETURN  HOMEPAGE           ", 0AH, 0DH	 ;16H
						DB	"                                                   ", 0AH, 0DH	 ;17H	
						DB	"                                                   ", 0AH, 0DH,"$";18H			
	

.CODE
MAIN PROC
    MOV AX,@DATA
    MOV DS,AX
    
    CALL TO_CLEAR_SCREEN
	CALL LmenuICON

	MENU_ENDL:
    MOV AX,4C00H
    INT 21H
MAIN ENDP

MENU_SHOPNAME PROC
	;background
	MOV AH,06H
	MOV AX,0600H
	MOV BH,6EH
	MOV CX,0000H
	MOV DX,184FH
	INT 10H
	;fontground
	MOV AH,02H
	MOV BX,00
	MOV DX,0000
	INT 10H
	
	;=========== MAIN MENU OPTION ===========
	;shopname + icon + ENTSR SELECTION
	MOV AH,09H
	LEA DX,SHOPNAME
	INT 21H
	RET		;RETURN TO PROCEDURE
MENU_SHOPNAME ENDP
LmenuICON PROC
    PUSH AX
    PUSH BX
    PUSH DX    ; store main procedure cursor

	CALL MENU_SHOPNAME 		;CALL FUNCTION SHOW SHOPNAME
		
	MOV AH,02H
	MOV BX,00
	MOV DX,0D1DH
	INT 10H
		
	MOV AH,01H
	INT 21H
	MOV MENU_SELECTION,AL	; cmp SELECTION
		
	CMP AL,'1'
	JE L_WELC_MENU_CUST_SELECT	; if (selection == '1')
	CMP AL,'2'
	JE Llogin_PHASE				; else if (selection == '2')
	CMP AL,'3'
	JE LMENU_THANKS			; else if (selection == '3')
	CMP AL,'1'
	JNE IF_INVALID_CODE				; if (selection != '1')
	CMP AL,'2'
	JNE IF_INVALID_CODE				; else if (selection != '2')
	CMP AL,'3'
	JNE IF_INVALID_CODE				; else if (selection != '3')
	JMP LIF_YES_CONTINUE	
	
	Llogin_PHASE:
	CALL Llogin
	JMP LmenuICON_ENDL
	
	IF_INVALID_CODE:	
		;background
		MOV AH,06H
		MOV AX,0600H
		MOV BH,4FH
		MOV CX,1006H
		MOV DX,112EH
		INT 10H
		;fontground
		MOV AH,02H
		MOV BX,00
		MOV DX,1000H
		INT 10H
		
		MOV AH,09H
		LEA DX,SHOPNAME_INVALID
		INT 21H
	
	LIF_YES_CONTINUE:	
	MOV AH,01H
	INT 21H
	MOV SELECTION,AL
	CMP AL,0DH
	JE	RETURN_LmenuICON
	CALL LmenuICON
	
	RETURN_LmenuICON:
		CALL LmenuICON
		
	L_WELC_MENU_CUST_SELECT:
		CALL LWELC_MENU		
		JMP MENU_ENDL
		
	LMENU_THANKS:
		CALL MENU_THANKS_PROCEDURE
		JMP MENU_ENDL 
	LmenuICON_ENDL:
    POP DX
    POP BX
    POP AX     ; to recover register
	RET
LmenuICON ENDP
RECEIPT_THANKQ PROC
	LRECEIPT_THANKQ_RETURN:
		;background
		MOV AH,06H
		MOV AX,0600H
		MOV BH,6EH
		MOV CX,0000H
		MOV DX,184FH
		INT 10H
		
		;fontground
		MOV AH,02H
		MOV BX,00H
		MOV DX,0000H
		INT 10H
		
		MOV AH,09H
		LEA DX,NO_EXIT_RECEIPT
		INT 21H
		
		MOV AH,01H
		INT 21H
		
		CMP AL,0DH
		JE LRECEIPT_THANKQ
		JMP LRECEIPT_THANKQ_RETURN		; ALWAYS LOOP EXPECT PRESS <Enter>  
	
	LRECEIPT_THANKQ:
		CALL MAIN
		JMP RECEIPT_THANKQ_PROC_ENDL
		
	RECEIPT_THANKQ_PROC_ENDL:
		RET		;RETURN TO HOMEPAGE
	
RECEIPT_THANKQ ENDP
MENU_THANKS_PROCEDURE PROC
	;fontground
	MOV AH,02H
	MOV BH,00H
	MOV DH,09H       
	MOV DL,00H       
	INT 10H
	
	MOV AH,09H
	LEA DX,MENU_THANKS	; Thankyou for using our system!
	INT 21H
	RET		;RETURN TO PROCEDURE
MENU_THANKS_PROCEDURE ENDP
;---------------------------------------------------------------------
;----------------------------------------------------------------------;---------------------------------------------------------------------
;----------------------------------------------------------------------
;---------------------------------------------------------------------
;----------------------------------------------------------------------
;BACKGROUND & FONTGROUND OF ORDER MENU PART
BG_WELC_TO_MSG PROC
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX		;STORE REGISTER
	
	;background (WHOLE PART)
	MOV AH,06H
	MOV AX,0600H
	MOV BH,6EH
	MOV CX,0000H
	MOV DX,184FH
	INT 10H
	
	;background (MENU FONT)
	MOV AH,06H
	MOV AX,0600H
	MOV BH,34H
	MOV CX,0205H
	MOV DX,022FH
	INT 10H
	
	;background (RETURN {R})
	MOV AH,06H
	MOV AL,00H
	MOV BH,6CH
	MOV CX,0D21H
	MOV DX,0D2DH
	INT 10H
	
	;fontground (WHOLE PART)
	MOV AH,02H
	MOV BH,00H
	MOV DH,00H
	MOV DL,00H
	INT 10H
	
	MOV AH,09H
    LEA DX,WELC_TO_MSG
    INT 21H
	
	POP DX		;RECOVERY
	POP CX
	POP BX
	POP AX
	RET
BG_WELC_TO_MSG ENDP


LCUST_SELECT_INVALID PROC
    PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX    ; store REGISTER
    
	MOV AH,06H
	MOV AL,00H
	MOV BH,4FH
	MOV CX,1107H
	MOV DX,122DH
	INT 10H
	
    MOV AH,02H
    MOV BH,00H
    MOV DH,11H       
    MOV DL,00H       
    INT 10H
    
    MOV AH,09H
    LEA DX,LIST_SELECT_INV
    INT 21H
	
	; to recover the LCUST_SELECT PROC
    MOV AH,06H
    MOV AL,00H  
    MOV BH,3EH       
    MOV CX,0D12H     
    MOV DX,0D14H     
    INT 10H

    MOV AH,02H
    MOV BH,00H
    MOV DH,0DH        
    MOV DL,13H   
    INT 10H
    
	POP DX
    POP CX
    POP BX
    POP AX     	; to recover register
    RET		;RETURN TO LCUST_SELECT PROC
LCUST_SELECT_INVALID ENDP

LWELC_MENU PROC
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	
	CALL BG_WELC_TO_MSG
    
	LSELECT_GROUP:		
		;background (SELECTION)
		MOV AH,06H
		MOV AX,0600H
		MOV BH,3EH
		MOV CX,0D12H
		MOV DX,0D14H
		INT 10H
		;fontground
		MOV AH,02H
		MOV BH,00H
		MOV DH,0DH
		MOV DL,13H
		INT 10H

		MOV AH,01H
		INT 21H
		MOV CUST_SELECTION,AL
	
		CMP AL,'r'
		JE LCUST_SELECT_RETURN
		CMP AL,'R'
		JE LCUST_SELECT_RETURN
		CMP AL,'1'
		JE LVALID_GROUP
		CMP AL,'2'
		JE LVALID_GROUP
		JMP LCUST_OPT_INVALID

		LCUST_SELECT_RETURN:
			CALL MAIN
		
		LCUST_OPT_INVALID:
			CALL LCUST_SELECT_INVALID
			MOV AH,01H
			INT 21H
			CMP AL,0DH					; <ENTER> TO CONTINUE
			JE BACK_MENU
			JNE LCUST_OPT_INVALID
		; X JMP LCUST_SELECT_ENDL BECAUSE ONLY RECEIVE <ENTER> , NO ANY INVALID SELECTION
		
		BACK_MENU:
			CALL LWELC_MENU				;A SELECTION HELP TO RETURN TO LWELC_MENU PROC BEFORE RET
		
		;================================ CALC ==============================================
		
		LVALID_GROUP:
			MOV [SELECTED_CATEGORY],AL
			CALL SHOW_NL
		LSELECT_PROD:
			CMP AL,'1'            
			CALL LSHOW_LIST_SUBOPT1
			JMP LSELECT_PROD_CONTINUE
			CMP AL,'2'   
			CALL LSHOW_LIST_SUBOPT2
			JMP LSELECT_PROD_CONTINUE
			
			
			
		LSELECT_PROD_CONTINUE:
			;background to hide input
			MOV AH,06H
			MOV AL,00H
			MOV BH,66H
			MOV CX,0E00H
			MOV DX,0E01H
			INT 10H
			;fontground for hide input
			MOV AH,02H
			MOV BH,00H
			MOV DH,0EH
			MOV DL,00H
			INT 10H
			
			MOV AH,01H
			INT 21H
			CMP AL,'a'
			JE LVALID_PROD
			CMP AL,'A'
			JE LVALID_PROD
			CMP AL,'b'
			JE LVALID_PROD
			CMP AL,'B'
			JE LVALID_PROD
			
		LVALID_PROD_INVALID:	
			CALL LCUST_SELECT_INVALID
			MOV AH,01H
			INT 21H
			CMP AL,0DH					; <ENTER> TO CONTINUE
			JE LSELECT_PROD
			JNE LVALID_PROD_INVALID		; LOOP WHEN NOT EXIST <ENTER>
		
		LVALID_PROD:
			MOV [SELECTED_PROD],AL
			
			CALL SHOW_NL
			
			MOV AL,[SELECTED_CATEGORY]
			CMP AL,'1'
			JE LPROD_G1
			CMP AL,'2'
			JE LPROD_G2
		
	LPROD_G1:
		MOV AL,[SELECTED_PROD]
		CMP AL,'A'
		JE LSET_PROD_1_A
		CMP AL,'a'
		JE LSET_PROD_1_A
		CMP AL,'B'
		JE LSET_PROD_1_B
		CMP AL,'b'
		JE LSET_PROD_1_B
		JMP LPROD_G1
		
	LSET_PROD_1_A:
		MOV [PRICE_OF_PROD],2	;	CHEESE BUN RM 2.00
		JMP L_TO_GET_QTY
		
	LSET_PROD_1_B:
		MOV [PRICE_OF_PROD],3	;	POTATO BUN RM 3.00
		JMP L_TO_GET_QTY
		
	LPROD_G2:
		MOV AL,[SELECTED_PROD]
		CMP AL,'A'
		JE LSET_PROD_2_A
		CMP AL,'a'
		JE LSET_PROD_2_A
		CMP AL,'B'
		JE LSET_PROD_2_B
		CMP AL,'b'
		JE LSET_PROD_2_B
		JMP LPROD_G2
		
	LSET_PROD_2_A:
		MOV [PRICE_OF_PROD],4	;	CHOCOLATE CAKE RM 4.00
		JMP L_TO_GET_QTY
		
	LSET_PROD_2_B:
		MOV [PRICE_OF_PROD],5	;	BANAN CAKE RM 5.00
		JMP L_TO_GET_QTY
		
	L_TO_GET_QTY:;FROM USER
		LEA DX,QTY_PROD_MSG
		MOV AH,09H
		INT 21H
		
		CALL GET_TWO_DIGIT_INPUT
		MOV [QTY_OF_PROD],AL
		
		CALL SHOW_NL
		
		;CALC
		MOV AL,[QTY_OF_PROD]
		MOV BL,[PRICE_OF_PROD]
		CALL MUL_8_BIT_MAX_255
		
		;SHOW COST
		CALL DISPLAY_PROD_CURRENT_PRICE
		
		;PRESS <ENTER>
		CALL SHOW_NL
		MOV AH,06H
		MOV AL,00H
		MOV BH,67H
		MOV CX,1606H
		MOV DX,162BH
		INT 10H
		LEA DX,ENTER_CONFIRM
		MOV AH,09H
		INT 21H
		
		MOV AH,07H
		INT 21H
		CMP AL,0DH
		JNE L_TO_GET_QTY  ;LOOP ONE MORE EXPECT PRESS <ENTER>
		
		CALL DISPLAY_RECEIPT	
	
	POP DX
	POP CX
	POP BX
	POP AX
	RET
LWELC_MENU ENDP

LSHOW_LIST_SUBOPT1 PROC
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	
	;background (MENU FONT)
	MOV AH,06H
	MOV AL,00H
	MOV BH,6EH
	MOV CX,0600H
	MOV DX,0D38H
	INT 10H
	
	;fontground (LIST_SUBOPT1 PART)
	MOV AH,02H
	MOV BH,00H
	MOV DH,06H 
	MOV DL,00H       
	INT 10H
	
	; show LIST_SUBOPT1
	MOV AH,09H
	LEA DX,LIST_SUBOPT1
	INT 21H
	
	POP DX
	POP CX
	POP BX
	POP AX
	RET
LSHOW_LIST_SUBOPT1 ENDP
LSHOW_LIST_SUBOPT2 PROC
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	
	;background (MENU FONT)
	MOV AH,06H
	MOV AL,00H
	MOV BH,6EH
	MOV CX,0600H
	MOV DX,0D38H
	INT 10H
	
	;fontground (LIST_SUBOPT2 PART)
	MOV AH,02H
	MOV BH,00H
	MOV DH,00H 
	MOV DL,00H       
	INT 10H
	
	; show LIST_SUBOPT2
	MOV AH,09H
	LEA DX,LIST_SUBOPT2AB
	INT 21H
	
	POP DX
	POP CX
	POP BX
	POP AX
	RET
LSHOW_LIST_SUBOPT2 ENDP

TO_CLEAR_SCREEN PROC
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX		;STORE REGISTER
	
    MOV AX,0600H
    MOV BH,07H
    MOV CX,0000H
    MOV DX,184FH
    INT 10H
    
    MOV AH,02H
    MOV BH,00H
    MOV DH,00H
	MOV DL,00H
    INT 10H
	
	POP DX
	POP CX
	POP BX
	POP AX		; RECOVERY REGISTER
    RET
TO_CLEAR_SCREEN ENDP

SHOW_NL PROC
    LEA DX,NL
    MOV AH,09H
    INT 21H
    RET
SHOW_NL ENDP

;SHOW COST WITH _.00
DISPLAY_PROD_CURRENT_PRICE PROC
	PUSH AX
	PUSH DX		; STORE REGISTER
	
    LEA DX,PROD_CURRENT_PRICE
    MOV AH, 09H
    INT 21H
    
    MOV AX,[TOTAL_COST]
    CALL DISPLAY_DIGIT

    LEA DX,PRICE_DECIMAL_POINT	; ADD .00 AFTER COST
    MOV AH, 09H
    INT 21H
    
	POP DX
	POP AX		; RECOVERY REGISTER
    RET
DISPLAY_PROD_CURRENT_PRICE ENDP

DISPLAY_RECEIPT PROC
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX		; ALWAYS STORE REGISTER
	
    CALL TO_CLEAR_SCREEN
	;background
	MOV AH,06H
	MOV AX,0600H
	MOV BH,6EH
	MOV CX,0000H
	MOV DX,184FH
	INT 10H
	;fontground
	MOV AH,02H
	MOV BH,00H
	MOV DH,00H
	MOV DL,00H
	INT 10H
	
    LEA DX,TO_SEE_RECEIPT
    MOV AH,09H
    INT 21H
    CALL SHOW_NL	; NL
	;fontground (WHOLE PART)
	MOV AH,02H
	MOV BH,00H
	MOV DH,0CH
	MOV DL,05H
	INT 10H
	
    LEA DX,PROD_LABEL
    INT 21H
	
	;background
	MOV AH,06H
	MOV AX,0600H
	MOV BH,66H
	MOV CX,0C04H
	MOV DX,0C05H
	INT 10H
    
    CALL SHOW_PROD_INRECEIPT
	
	MOV AH,09H
	LEA DX,MULTIPLY_SYMBOL		; SYMBOL x
	INT 21H

	CALL SHOW_PROD_QTY_INRECEIPT
	
    CALL SHOW_NL
	CALL SHOW_NL
	CALL SHOW_NL

    LEA DX,TOTAL_COST_LABEL
    MOV AH,09H
    INT 21H
    
    MOV AX,[TOTAL_COST]
    CALL DISPLAY_DIGIT

    LEA DX,PRICE_DECIMAL_POINT; ADD .00 AFTER COST
    MOV AH,09H
    INT 21H
    
    MOV AH,01H
	INT 21H
	
	L_DECISION_RECEIPT:
		CMP AL,'Y'
		JE RETURN_TO_MENU_FUNC
		CMP AL,'y'
		JE RETURN_TO_MENU_FUNC
		CMP AL,'N'
		JE EXIT_FROM_RECEIPT_FUNC
		CMP AL,'n'
		JE EXIT_FROM_RECEIPT_FUNC
		
		JMP L_DECISION_RECEIPT  	; INVALID OPTION
		
	RETURN_TO_MENU_FUNC:
		CALL LWELC_MENU
		JMP RECEIPT_END_FUNC
		
	EXIT_FROM_RECEIPT_FUNC:
		CALL RECEIPT_THANKQ
		
	RECEIPT_END_FUNC:
	POP DX
	POP CX
	POP BX
	POP AX		;RECOVERY REGISTER
    RET
DISPLAY_RECEIPT ENDP

MUL_8_BIT_MAX_255 PROC
    PUSH BX
    PUSH DX			; STORE REGISTER
    
    XOR AH,AH        ; INITIALIZE AH   SO AX = AL
    XOR BH,BH        ; AND BH			SO BX = BL
    MUL BX           ; AX = AL*BL
    
    MOV [TOTAL_COST],AX
    
    POP DX			; RECOVERY
    POP BX
    RET
MUL_8_BIT_MAX_255 ENDP

GET_TWO_DIGIT_INPUT PROC
    PUSH BX
    PUSH CX
    
GET_TENS_DIGIT:
    MOV AH,01H
    INT 21H
    
    CMP AL,'0'
    JB GET_TENS_DIGIT
    CMP AL,'9'
    JA GET_TENS_DIGIT
    
    SUB AL,30H        ; DISPLAY DIGIT
    MOV BL,AL
    MOV AL,10         ; AL =TENS DIGIT* 10
    MUL BL
    MOV BH,AL
    
GET_ONES_DIGIT:
    MOV AH,01H
    INT 21H
    
    CMP AL,'0'
    JB GET_ONES_DIGIT
    CMP AL,'9'
    JA GET_ONES_DIGIT
    
    SUB AL,30H
    ADD BH,AL
    MOV AL,BH
    
    POP CX
    POP BX
    RET
GET_TWO_DIGIT_INPUT ENDP

DISPLAY_DIGIT PROC
    PUSH AX
    PUSH BX
    PUSH CX
    PUSH DX
    
    MOV CX,0
    MOV BX,10
    
    CMP AX,0
    JNZ CONVERT_LOOP    ; IF(TOTAL != 0) --> CALC & CONVERT 
    MOV DL,'0'         	; ELSE IF(TOTAL == 0) --> SHOW 0
    MOV AH,02H			; ELSE
    INT 21H				; X SUB 30H BECAUSE ALREADY AS DIGIT
    JMP DISPLAY_END
    
	CONVERT_LOOP:
		XOR DX, DX          ;INITIALIZE DX
		DIV BX              ;[AX] : QUO ; [DX] : REMAIN
		
		PUSH DX             ;STORE REGISTER
		
		INC CX              ;[CX]++
		CMP AX, 0           
		JNZ CONVERT_LOOP    ;IF(TOTAL != 0) --> LOOP CALC & CONVERT
		
	DISPLAY_LOOP:
		POP DX              ;ONLY POP UP DX 
		ADD DL, '0'     	; CX ACT AS LOOP TIME   
		MOV AH, 02H          
		INT 21H
		LOOP DISPLAY_LOOP   ;LOOP [CX]
		
	DISPLAY_END:
		POP DX				; RECOVERY REGISTETR
		POP CX
		POP BX
		POP AX
    RET
DISPLAY_DIGIT ENDP

SHOW_PROD_INRECEIPT PROC

	;SHOW PROD NAME IN RECEIPT
    MOV AL,[SELECTED_CATEGORY]
    CMP AL,'1'
    JE L_SHOW_PROD_GRP1		; FOR BUN CATEGORY
    CMP AL,'2'
    JE L_SHOW_PROD_GRP2		; FOR CAKE CATEGORY
    
	;=========================
	L_SHOW_PROD_GRP1:
		MOV AL,[SELECTED_PROD]
		CMP AL,'A'					
		JE L_SHOW_PROD_1_A		
		CMP AL,'B'
		JE L_SHOW_PROD_1_B		
    
	L_SHOW_PROD_1_A:
		LEA DX,PROD_1_A_MSG
		JMP SHOW_PRODUCT_NAME
    
	L_SHOW_PROD_1_B:
		LEA DX,PROD_1_B_MSG
		JMP SHOW_PRODUCT_NAME
	;==========================
	L_SHOW_PROD_GRP2:
		MOV AL,[SELECTED_PROD]
		CMP AL,'A'
		JE L_SHOW_PROD_2_A
		CMP AL,'B'
		JE L_SHOW_PROD_2_B
		
	L_SHOW_PROD_2_A:
		LEA DX,PROD_2_A_MSG
		JMP SHOW_PRODUCT_NAME
		
	L_SHOW_PROD_2_B:
		LEA DX,PROD_2_B_MSG
    ;==========================
	SHOW_PRODUCT_NAME:
		MOV AH,09H
		INT 21H

	RET
SHOW_PROD_INRECEIPT ENDP

SHOW_PROD_QTY_INRECEIPT PROC
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	
	;background
	MOV AH,06H
	MOV AX,0600H
	MOV BH,66H
	MOV CX,0C28H
	MOV DX,0C29H
	INT 10H
	;fontground (QTY LABEL)
	MOV AH,02H
	MOV BH,00H
	MOV DH,0CH
	MOV DL,29H
	INT 10H
	LEA DX,QTY_LABEL
	INT 21H
	
	MOV AL,[QTY_OF_PROD]
    XOR AH,AH			; INITIALIZE AH ONLY
    CALL DISPLAY_DIGIT	;  TO MAKE [AX] = [AL]
	
	POP DX
	POP CX
	POP BX
	POP AX
	RET
SHOW_PROD_QTY_INRECEIPT ENDP

;---------------------------------------------------------------------
;----------------------------------------------------------------------
;-------------------------------------------------------
;---------------------------------------------------------------------
;----------------------------------------------------------------------
;=============================(ADMIN LOGIN SYSTEM)========================================	
Llogin PROC
    PUSH AX
    PUSH BX
    PUSH CX
    PUSH DX
    PUSH SI    ; store main procedure cursor

	;background
	MOV AH,06H
	MOV AX,0600H
	MOV BH,6EH
	MOV CX,0000H
	MOV DX,184FH
	INT 10H
	
	;fontground
	MOV AH,02H
	MOV BX,00
	MOV DX,0000
	INT 10H
		
	;Login and logout interface
	MOV AH,09H
	LEA DX,STRFONT
	INT 21H
	
	;fontground for "RETURN  {R} "
	MOV AH,06H
	MOV AX,0600H
	MOV BH,6CH
	MOV CX,1404H
	MOV DX,142CH
	INT 10H
	MOV AH,02H
	MOV BX,00
	MOV DX,1400H
	INT 10H
	MOV AH,09H
	LEA DX,STRFONT_LOGIN_R
	INT 21H
		
	;background WHITE SIDE
	MOV AH,06H
	MOV AX,0600H
	MOV BH,7AH
	MOV CX,0708H
	MOV DX,0F2CH
	INT 10H
	
	;background BLUE FRAME
	MOV AH,06H
	MOV AX,0600H
	MOV BH,1AH
	MOV CX,080AH
	MOV DX,0E2AH
	INT 10H

	;fontground for "Username :"
	MOV AH,02H
	MOV BX,00
	MOV DH,0AH
	MOV DL,00H
	INT 10H
		
	MOV AH,09H
	LEA DX,USERNAME
	INT 21H
	
	L_INPUT_USERNAME_CONTINUE:
	;fontground for input username
	MOV AH,02H
	MOV BX,00
	MOV DH,0AH
	MOV DL,1DH
	INT 10H
		
	LEA SI,TARUMT    ; store(MOV) username --> SI
	JMP Luser_ADMIN
	
;compare ADMIN username
Luser_ADMIN:         ; Admin password part 

	
	MOV AH,01H
	INT 21H
	MOV BL,AL  
	MOV DL,[SI]  	 ; ARRAY for store PSW

	CMP DL,'R'				;
	JE L_RETURN_WELC_MENU	;	RETURN HOMEPAGE IF 
	CMP BL,'R'				;	"R" EXIST
	JE L_RETURN_WELC_MENU	;
	
	CMP DL,'$'			;---
	JE LPSW_ENTER		;\\\\
	CMP BL,[SI]			;\\\\\
	JNE LINVALID		;=====> compare user input with TARUMT
	INC SI				;|||||
	JMP Luser_ADMIN		;||||	
	JMP CONTINUE_ADMIN	;---	


	L_RETURN_WELC_MENU:
		CALL MAIN
		JMP L_INPUT_USERNAME_CONTINUE
	
;fontground for "Password :"
LPSW_ENTER:
	MOV AH,09H
	LEA DX,NL
	INT 21H
		
	;fontground for "Password : "
	MOV AH,02H
	MOV BX,00
	MOV DH,0BH
	MOV DL,00H
	INT 10H
		
	MOV AH,09H
	LEA DX,PASSWORD
	INT 21H
		
	;fontground for input password
	MOV AH,02H
	MOV BX,00
	MOV DH,0BH
	MOV DL,1DH
	INT 10H
	LEA SI,VERIFY 	; store PSW in SI
		
Lpassword_ADMIN:
	MOV AH,01H
	INT 21H
	MOV BL,AL
	MOV DL,[SI]  
	
	CMP DL,'R'				;
	JE L_RETURN_WELC_MENU	;	RETURN HOMEPAGE IF 
	CMP BL,'R'				;	"R" EXIST
	JE L_RETURN_WELC_MENU	;
	
	CMP DL,'$'			;---
	JE LcheckPSW		;\\\\
	CMP BL,[SI]			;\\\\\
	JNE LINVALID		;=====> compare user input with TARUMT
	INC SI				;|||||
	JMP Lpassword_ADMIN	;----

; Invalid username or password
LINVALID:
	MOV AH,09H
	LEA DX,NL
	INT 21H
		
	MOV AH,06H
	MOV AX,0600H
	MOV BH,4FH
	MOV CX,1109H
	MOV DX,122BH
	INT 10H
	
	;fontground
	MOV AH,02H
	MOV BX,00
	MOV DH,11H
	MOV DL,00H
	INT 10H
	
	MOV AH,09H
	LEA DX,INVALID_STRFONT_PSW
	INT 21H	
		
	MOV AH,01H
	INT 21H
	CMP AL,0DH
	JE Llogin_RetryOneMore   ; return to login
	JMP LINVALID

;compare ADMIN password
LcheckPSW:
	CMP BL,0DH
	JNE LINVALID 		; for checking process
		
	MOV AH,06H
	MOV AX,0600H
	MOV BH,2EH
	MOV CX,0D04H
	MOV DX,0D28H
	INT 10H
		
		
	JMP CONTINUE_ADMIN	

    POP SI
    POP DX
    POP CX
    POP BX
    POP AX     ; to recover register
	RET
Llogin ENDP

;====================================================================		
Llogin_RetryOneMore PROC         ;a label help to jump to login page
    PUSH AX    ; store main procedure cursor

	CALL Llogin

    POP AX     ; to recover register
	RET
Llogin_RetryOneMore ENDP

;=============================(ADMIN SYSTEM)========================================	
CONTINUE_ADMIN PROC
    PUSH AX
    PUSH BX
    PUSH DX    ; store main procedure cursor

	;background
	MOV AH,06H
	MOV AX,0600H
	MOV BH,6EH
	MOV CX,0000H
	MOV DX,184FH
	INT 10H
	
	;fontground
	MOV AH,02H
	MOV BX,00
	MOV DX,0106H
	INT 10H
	
	MOV AH,09H
	LEA DX,SYSTEM		;"===WELCOME TO ADMIN SYSTEM===$"
	INT 21H
	MOV AH,09H
	LEA DX,NL
	INT 21H
	MOV AH,09H
	LEA DX,CHECKING		;"SALES REPORT CHECKING   [1] >"
	INT 21H
	MOV AH,09H
	LEA DX,NL
	INT 21H
	MOV AH,09H
	LEA DX,XCHECKING	;"EXIT  |  LOG-OUT        [2] >"
	INT 21H
	
	;background
	MOV AH,06H
	MOV AX,0600H
	MOV BH,66H
	MOV CX,0401H
	MOV DX,0402H
	INT 10H
	
	;fontground
	MOV AH,02H
	MOV BX,00
	MOV DX,0401H
	INT 10H
	
	;enter selection [1] or [2]
	MOV AH,01H
	INT 21H
	SUB AL,30H
	MOV SELECTION,AL
	
	MOV AH,09H
	LEA DX,NL
	INT 21H
	
	;SELECTION OF OPT    
	CMP SELECTION,1		; if (selection == '1') 
	JE LSalesReport		;		Sales report;
	CMP SELECTION,1		; else if (selection == '0') 
	JL LINVALIDSECa		; 		cout << "INVALID SELECTION!!! PLEASE RE-ENTER...";
	CMP SELECTION,2		; else
	JG LINVALIDSECa		; 		cout << "INVALID SELECTION!!! PLEASE RE-ENTER..."
	CMP SELECTION,2		; else if (selection == '2') 
	JE LExit_Logout		; 		Exit | Log out;
	JMP CONTINUE_ADMIN
	
; if(SELECTION == '1')  -->  Sales report
LSalesReport:
	JMP LshowREPORT
	
LINVALIDSECa:		; else if (selection == '0' || selection >= '3') 
	;background
	MOV AH,06H
	MOV AX,0600H
	MOV BH,4FH
	MOV CX,0902H
	MOV DX,0A2BH
	INT 10H
	
	;fontground
	MOV AH,02H
	MOV BX,00
	MOV DX,0904H
	INT 10H
	
	MOV AH,09H
	LEA DX,INVALIDSEC	; cout << "INVALID SELECTION!!! PLEASE RE-ENTER...";
	INT 21H	
		
	MOV AH,09H
	LEA DX,NL
	INT 21H	
		
	MOV AH,09H
	LEA DX,REMOVEINV	; cout << "PRESS <ENTER> TO RETURN";
	INT 21H	
		
	MOV AH,01H
	INT 21H
	CMP AL,0DH
	CALL CONTINUE_ADMIN ; <Enter> to return back ADMIN SYSTEM

    POP DX
    POP BX
    POP AX     ; to recover register
	RET
CONTINUE_ADMIN ENDP

;====================================================================
Llogin_BACK1 PROC			;a label help to jump back Admin Login
    PUSH AX    ; store main procedure cursor

	CALL Llogin

    POP AX     ; to recover register
	RET
Llogin_BACK1 ENDP

CONTINUE_ADMIN_A PROC		;a label help to loop Admin system
    PUSH AX    ; store main procedure cursor

	JMP CONTINUE_ADMIN

    POP AX     ; to recover register
	RET
CONTINUE_ADMIN_A ENDP

;====================================================================
	
LshowREPORT PROC			; if (selection == '1')
    PUSH AX
    PUSH BX
    PUSH DX    ; store main procedure cursor

	;background
	MOV AH,06H
	MOV AX,0600H
	MOV BH,30H
	MOV CX,0502H
	MOV DX,0D23H
	INT 10H
	
	;fontground
	MOV AH,02H
	MOV BX,00
	MOV DX,060AH
	INT 10H
	
	MOV AH,09H
	LEA DX,HERE  		; to put the part of report later
	INT 21H
		
	JMP MENU_ENDL

    POP DX
    POP BX
    POP AX     ; to recover register
	RET
LshowREPORT ENDP

; if(SELECTION == '2')  -->  Exit | Log out
LExit_Logout PROC
    PUSH AX    ; store main procedure cursor

	JMP LshowExit

    POP AX     ; to recover register
	RET
LExit_Logout ENDP

LshowExit PROC			; "EXIT  |  LOG-OUT        [2] >"
    PUSH AX
    PUSH DX    ; store main procedure cursor

	MOV AH,09H
	LEA DX,ENSURE	; "ARE YOU SURE TO CONTINUE LOG-OUT "
	INT 21H
	
	;background
	MOV AH,06H
	MOV AX,0600H
	MOV BH,66H
	MOV CX,0632H
	MOV DX,0633H
	INT 10H
	
	MOV AH,01H
	INT 21H
	MOV SELECTION,AL ; input selection [y/n]

	; if (selection == 'Y' || selection == 'y')
	CMP SELECTION,'Y'
	JE Llogin_BACK0   ;back to login page
	CMP SELECTION,'y'
	JE Llogin_BACK0
	
	; else if (selection == 'N' || selection == 'n')
	CMP SELECTION,'N'
	JE CONTINUE_ADMIN_0  ;continue with admin menu
	CMP SELECTION,'n'    
	JE CONTINUE_ADMIN_0
	
	MOV AH,09H
	LEA DX,NL
	INT 21H
	; else
	JMP LINVALIDSEC

    POP DX
    POP AX     ; to recover register
	RET
LshowExit ENDP

;====================================================================
Llogin_BACK0 PROC      		;a label help to jump back Admin Login
    PUSH AX    ; store main procedure cursor

	CALL LmenuICON

    POP AX     ; to recover register
	RET
Llogin_BACK0 ENDP

CONTINUE_ADMIN_0 PROC  		;a label help to loop Admin system
    PUSH AX    ; store main procedure cursor

	JMP CONTINUE_ADMIN_A

    POP AX     ; to recover register
	RET
CONTINUE_ADMIN_0 ENDP

;====================================================================
	
LINVALIDSEC PROC
    PUSH DX    ; store main procedure cursor

	MOV AH,09H
	LEA DX,INVALIDSEC
	INT 21H
	JMP MENU_ENDL

    POP DX     ; to recover register
	RET
LINVALIDSEC ENDP


DISPLAY_SALES_REPORT PROC
    PUSH AX
    PUSH BX
    PUSH CX
    PUSH DX
    
    ;BACKGRUND OF SALES REPORT 
    MOV AX,0600H
    MOV BH,6FH
    MOV CX,0000H
    MOV DX,184FH
    INT 10H
    
    ;fontground
    MOV AH,02H
    MOV BH,00H
    MOV DH,01H
    MOV DL,10H
    INT 10H
    
    MOV AH,09H
    LEA DX,SALES_REPORT_TITLE
    INT 21H
    
    ;SHOW CHEESE BUN SALES
    MOV AH,02H
    MOV BH,00H
    MOV DH,03H
    MOV DL,10H
    INT 10H
    
    MOV AH,09H
    LEA DX,SALES_ITEM_1_A
    INT 21H
    
	;COUNTER 
    MOV DL,[SALES_COUNT_1_A]
    ADD DL,30H
    MOV AH,02H
    INT 21H
	
    ;SHOW POTATO BUN SALES 
    MOV AH,02H
    MOV BH,00H
    MOV DH,04H
    MOV DL,10H
    INT 10H
    
    MOV AH,09H
    LEA DX,SALES_ITEM_1_B
    INT 21H

    ;COUNTER
    MOV DL,[SALES_COUNT_1_B]
    ADD DL,30H
    MOV AH,02H
    INT 21H
    
    ;SHOW CHOCOLATE CAKE SALES
    MOV AH,02H
    MOV BH,00H
    MOV DH,05H
    MOV DL,10H
    INT 10H
    
    MOV AH,09H
    LEA DX,SALES_ITEM_2_A
    INT 21H

    ;COUNTER
    MOV DL,[SALES_COUNT_2_A]
    ADD DL,30H
    MOV AH,02H
    INT 21H
    
     ;SHOW BANANA CAKE SALES
    MOV AH,02H
    MOV BH,00H
    MOV DH,06H
    MOV DL,10H
    INT 10H
    
    MOV AH,09H
    LEA DX,SALES_ITEM_2_B
    INT 21H

    ;COUNTER
    MOV DL,[SALES_COUNT_2_B]
    ADD DL,30H
    MOV AH,02H
    INT 21H
    
    ;FONTGROUND TOTAL SALES
    MOV AH,02H
    MOV BH,00H
    MOV DH,08H
    MOV DL,10H
    INT 10H
    
    MOV AH,09H
    LEA DX,TOTAL_SALES
    INT 21H
    
    ;TOTAL COUNTER FROM 4 ITEM
    MOV AL,[SALES_COUNT_1_A]
    ADD AL,[SALES_COUNT_1_B]
    ADD AL,[SALES_COUNT_2_A]
    ADD AL,[SALES_COUNT_2_B]
    
    ;SHOW ONES DIGIT
    MOV BL,10
    DIV BL    
    MOV CL,AL
    MOV CH,AH
    
    CMP CL,0
    JE SHOW_ONES_ONLY
    
    ;SHOW TENS DIGIT
    MOV DL,CL
    ADD DL,30H
    MOV AH,02H
    INT 21H
    
SHOW_ONES_ONLY:
    MOV DL,CH
    ADD DL,30H
    MOV AH,02H
    INT 21H
    
    MOV AH,02H
    MOV BH,00H
    MOV DH,0CH
    MOV DL,10H
    INT 10H
    
    MOV AH,09H
    LEA DX,PRESS_KEY_ENTER
    INT 21H
    
    MOV AH,01H
    INT 21H
	CMP AL,0DH
	JNE RETURN_SALES_REPORT
	JMP SALES_REPORT_ENDL
	
	RETURN_SALES_REPORT:
		CALL DISPLAY_SALES_REPORT
		JMP MENU_ENDL
	
	SALES_REPORT_ENDL:
		POP DX
		POP CX
		POP BX
		POP AX
    RET
DISPLAY_SALES_REPORT ENDP

END MAIN
